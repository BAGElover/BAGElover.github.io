<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tannerの笔记</title>
  
  <subtitle>坚持记录</subtitle>
  <link href="https://sbsb.life/atom.xml" rel="self"/>
  
  <link href="https://sbsb.life/"/>
  <updated>2025-05-09T15:37:22.908Z</updated>
  <id>https://sbsb.life/</id>
  
  <author>
    <name>Tanner</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Manjaro常用软件安装</title>
    <link href="https://sbsb.life/2025/05/09/Manjaro%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    <id>https://sbsb.life/2025/05/09/Manjaro%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</id>
    <published>2025-05-09T15:19:05.000Z</published>
    <updated>2025-05-09T15:37:22.908Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>计划长期使用Manjaro Linux，几天下来的体验感觉很棒，提高了开发的效率。这篇文章主要是为了记录安装常用软件的命令，在未来重装系统的时候可以快速部署（没座，已经预言到了）。</p><h4 id="VsCode"><a href="#VsCode" class="headerlink" title="VsCode"></a>VsCode</h4><p>超好用的编辑器，建议安装微软的二进制版本，可以多搜到一些好用的扩展包。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S visual-studio-code-bin</span><br></pre></td></tr></table></figure><h4 id="Typora免费版"><a href="#Typora免费版" class="headerlink" title="Typora免费版"></a>Typora免费版</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S typora-free-cn</span><br></pre></td></tr></table></figure><h4 id="WPS-Office"><a href="#WPS-Office" class="headerlink" title="WPS Office"></a>WPS Office</h4><p>不足之处，中午字体太少，但是现在也不清楚怎么安装window下的常用字体。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yay -S wps-office-cn  </span><br><span class="line">yay -S wps-office-mui-zh-cn #中文包</span><br><span class="line">yay -S ttf-wps-fonts  #缺少字体用这个命令</span><br><span class="line">sudo pacman -S wqy-zenhei wqy-microhei adobe-source-han-sans-cn-fonts  #安装 CJK 中文字体（增强中文文档表现）</span><br><span class="line">fc-cache -fv  #安装后刷新字体缓存</span><br></pre></td></tr></table></figure><h4 id="LXMusic-落雪音乐"><a href="#LXMusic-落雪音乐" class="headerlink" title="LXMusic(落雪音乐)"></a>LXMusic(落雪音乐)</h4><h5 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S lx-music-desktop-bin </span><br></pre></td></tr></table></figure><h5 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h5><p>在GitHUb上下载包<a href="https://github.com/lyswhut/lx-music-desktop/releases/download/v2.10.0/lx-music-desktop_2.10.0_x64.pacman">https://github.com/lyswhut/lx-music-desktop/releases/download/v2.10.0/lx-music-desktop_2.10.0_x64.pacman</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd home/tanner/下载  #进入刚刚在GitHUb文件到目录</span><br><span class="line">sudo pacman -U lx-music-desktop_2.10.0_x64.pacman   #安装LX Music</span><br></pre></td></tr></table></figure><h4 id="WeChat"><a href="#WeChat" class="headerlink" title="WeChat"></a>WeChat</h4><p>不足之处，这个版本不可以拖拽文件发送。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yay -S base-devel  #base-devel 是 Arch/Manjaro 构建软件的基本工具集，包含 fakeroot, make, gcc, 等。</span><br><span class="line">yay -S wechat-universal-bwrap  #安装</span><br></pre></td></tr></table></figure><h3 id="中文输入法"><a href="#中文输入法" class="headerlink" title="中文输入法"></a>中文输入法</h3><p>一定要添加环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S yay</span><br><span class="line">yay -Sy base-devel</span><br><span class="line"></span><br><span class="line">yay -S fcitx5 fcitx5-chinese-addons fcitx5-configtool fcitx5-gtk fcitx5-qt fcitx5-material-color fcitx5-pinyin-zhwiki fcitx5-config-qt</span><br><span class="line"></span><br><span class="line">#全局设置环境变量，确保系统中的所有应用都能使用指定的输入法框架</span><br><span class="line">sudo nano /etc/environment</span><br><span class="line">GTK_IM_MODULE=fcitx5</span><br><span class="line">QT_IM_MODULE=fcitx5</span><br><span class="line">XMODIFIERS=&quot;@im=fcitx5&quot;</span><br><span class="line">INPUT_METHOD=fcitx5</span><br><span class="line">SDL_IM_MODULE=fcitx5</span><br><span class="line">GLFW_IM_MODULE=ibus</span><br><span class="line"></span><br><span class="line">#这是为特定用户设置的环境变量，通常在用户登录时加载，适用于桌面环境。该文件中的设置确保用户在启动应用时，输入法框架也被正确加载</span><br><span class="line">sudo nano ~/.xprofile</span><br><span class="line">export GTK_IM_MODULE=fcitx5</span><br><span class="line">export QT_IM_MODULE=fcitx5</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx5&quot;</span><br><span class="line">export INPUT_METHOD=fcitx5</span><br><span class="line">export SDL_IM_MODULE=fcitx5</span><br><span class="line">export GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure><h4 id="向日葵"><a href="#向日葵" class="headerlink" title="向日葵"></a>向日葵</h4><p>第一次启动需要运行第二个命令，不然打不开</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yay -S sunloginclient </span><br><span class="line">systemctl start runsunloginclient.service</span><br></pre></td></tr></table></figure><h4 id="百度网盘"><a href="#百度网盘" class="headerlink" title="百度网盘"></a>百度网盘</h4><p>不足之处，不可以在线播放视频</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S baidunetdisk-bin </span><br></pre></td></tr></table></figure><h4 id="Google-Chrome-浏览器"><a href="#Google-Chrome-浏览器" class="headerlink" title="Google Chrome 浏览器"></a>Google Chrome 浏览器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S google-chrome</span><br></pre></td></tr></table></figure><h4 id="Miniconda"><a href="#Miniconda" class="headerlink" title="Miniconda"></a>Miniconda</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">yay -S miniconda3</span><br><span class="line">/opt/miniconda3  #默认 AUR 安装路径</span><br><span class="line">echo &#x27;export PATH=&quot;/opt/miniconda3/bin:$PATH&quot;&#x27; &gt;&gt; ~/.zshrc  #将其加入你的 .zshrc</span><br><span class="line">source ~/.zshrc</span><br><span class="line">conda --version  #测试</span><br><span class="line">conda init zsh  # 初始化 conda</span><br><span class="line">source ~/.zshrc</span><br><span class="line">conda create -n 环境名称 python=3.8  #创建新环境</span><br><span class="line">conda activate 环境名称  #启动环境</span><br></pre></td></tr></table></figure><h4 id="Edge-浏览器"><a href="#Edge-浏览器" class="headerlink" title="Edge 浏览器"></a>Edge 浏览器</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yay -S microsoft-edge-stable</span><br></pre></td></tr></table></figure><h4 id="Thunderbird邮箱"><a href="#Thunderbird邮箱" class="headerlink" title="Thunderbird邮箱"></a>Thunderbird邮箱</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S thunderbird</span><br></pre></td></tr></table></figure><h3 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#第一步，到Github下载安装包（.AppImage版本），例如：PicGo-2.3.1.AppImage</span><br><span class="line">#第二步，进入文件目录，执行命令，赋予执行权限</span><br><span class="line">chmod +x PicGo-2.3.1.AppImage</span><br><span class="line">#第三步，运行</span><br><span class="line">./PicGo-2.3.1.AppImage</span><br><span class="line">#第四步，添加快捷方式（.desktop 启动器）</span><br><span class="line">nano ~/.local/share/applications/picgo.desktop</span><br><span class="line">然后粘贴以下内容：</span><br><span class="line">[Desktop Entry]</span><br><span class="line">Name=PicGo</span><br><span class="line">Comment=Image uploader for GitHub, Gitee, etc.</span><br><span class="line">Exec=/home/tanner/下载/PicGo-2.3.1.AppImage</span><br><span class="line">Icon=picgo</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Categories=Graphics;Utility;</span><br><span class="line">⚠️ 注意把 Exec= 行中的路径改成你实际保存 AppImage 的路径。</span><br><span class="line">#第五步，更新应用数据库</span><br><span class="line">update-desktop-database ~/.local/share/applications</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;计划长期使用Manjaro Linux，几天下来的体验感觉很棒，提高了开发的效率。这篇文章主要是为了记录安装常用软件的命令，在未来重装系统的</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Manjaro" scheme="https://sbsb.life/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>Labelimg使用笔记</title>
    <link href="https://sbsb.life/2025/04/12/Labelimg%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://sbsb.life/2025/04/12/Labelimg%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2025-04-12T06:15:03.000Z</published>
    <updated>2025-04-13T08:53:16.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p> Label是一款免费的<strong>图像标注</strong>软件，可以以<strong>矩形框</strong>的形式对图像中的物体进行标记，常用于<strong>分类和目标检测</strong>。</p><hr><h3 id="一、下载labelimg压缩包"><a href="#一、下载labelimg压缩包" class="headerlink" title="一、下载labelimg压缩包"></a>一、下载labelimg压缩包</h3><p><a href="https://github.com/tzutalin/labelImg">https://github.com/tzutalin/labelImg</a></p><h3 id="二、解压压缩包"><a href="#二、解压压缩包" class="headerlink" title="二、解压压缩包"></a>二、解压压缩包</h3><p>在菜单中找到<code>Anaconda Prompt</code></p><p>进入到放置labelimg的文件夹中解压</p><h3 id="三、安装pyqt5"><a href="#三、安装pyqt5" class="headerlink" title="三、安装pyqt5"></a>三、安装pyqt5</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pyqt=5</span><br></pre></td></tr></table></figure><p>安装完成后，执行命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyrcc5 -o libs/resources.py resources.qrc</span><br></pre></td></tr></table></figure><p>执行完后不会返回任何结果</p><h3 id="四、启动标注软件"><a href="#四、启动标注软件" class="headerlink" title="四、启动标注软件"></a>四、启动标注软件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">labelimg</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt; Label是一款免费的&lt;strong&gt;图像标注&lt;/strong&gt;软件，可以以&lt;strong&gt;矩形框&lt;/strong&gt;的形式对图像中的物体进</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="labelimg" scheme="https://sbsb.life/tags/labelimg/"/>
    
  </entry>
  
  <entry>
    <title>Miniconde初次使用笔记</title>
    <link href="https://sbsb.life/2025/04/10/Miniconde%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://sbsb.life/2025/04/10/Miniconde%E5%88%9D%E6%AC%A1%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</id>
    <published>2025-04-09T16:15:03.000Z</published>
    <updated>2025-04-09T16:30:46.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、下载miniconda"><a href="#一、下载miniconda" class="headerlink" title="一、下载miniconda"></a>一、下载miniconda</h3><p><a href="https://www.anaconda.com/docs/main">miniconda官网</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/</span><br></pre></td></tr></table></figure><p> 我的安装包为<code>Miniconda3-py38_22.11.1-1-Windows-x86_64.exe</code></p><h3 id="二、安装过程和配置环境变量"><a href="#二、安装过程和配置环境变量" class="headerlink" title="二、安装过程和配置环境变量"></a>二、安装过程和配置环境变量</h3><p>参考文章</p><blockquote><p><a href="https://blog.csdn.net/weixin_43828245/article/details/124768518">https://blog.csdn.net/weixin_43828245&#x2F;article&#x2F;details&#x2F;124768518</a></p></blockquote><h3 id="三、创建虚拟环境"><a href="#三、创建虚拟环境" class="headerlink" title="三、创建虚拟环境"></a>三、创建虚拟环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n yolov8 python=3.8</span><br></pre></td></tr></table></figure><p><code>-n</code>是name的缩写，<code>python=3.8</code>不指定版本则默认为最新版本</p><h3 id="四、查看已安装的虚拟环境"><a href="#四、查看已安装的虚拟环境" class="headerlink" title="四、查看已安装的虚拟环境"></a>四、查看已安装的虚拟环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env list</span><br></pre></td></tr></table></figure><h3 id="五、激活环境"><a href="#五、激活环境" class="headerlink" title="五、激活环境"></a>五、激活环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate yolov8</span><br></pre></td></tr></table></figure><h3 id="六、删除虚拟环境"><a href="#六、删除虚拟环境" class="headerlink" title="六、删除虚拟环境"></a>六、删除虚拟环境</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda env remove -n Test1</span><br></pre></td></tr></table></figure><h3 id="七、全部命令"><a href="#七、全部命令" class="headerlink" title="七、全部命令"></a>七、全部命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1. conda --version #查看conda版本，验证是否安装</span><br><span class="line">2. conda update conda #更新至最新版本，也会更新其它相关包</span><br><span class="line">3. conda update --all #更新所有包</span><br><span class="line">4. conda update package_name #更新指定的包</span><br><span class="line">5. conda create -n env_name package_name #创建名为env_name的新环境，并在该环境下安装名为package_name 的包，可以指定新环境的版本号，例如：conda create -n python2 python=python2.7 numpy pandas，创建了python2环境，python版本为2.7，同时还安装了numpy pandas包</span><br><span class="line">6. source activate env_name #切换至env_name环境</span><br><span class="line">7. source deactivate #退出环境</span><br><span class="line">8. conda info -e #显示所有已经创建的环境</span><br><span class="line">9. conda create --name new_env_name --clone old_env_name #复制old_env_name为new_env_name</span><br><span class="line">10. conda remove --name env_name –all #删除环境</span><br><span class="line">11. conda list #查看所有已经安装的包</span><br><span class="line">12. conda install package_name #在当前环境中安装包</span><br><span class="line">13. conda install --name env_name package_name #在指定环境中安装包</span><br><span class="line">14. conda remove -- name env_name package #删除指定环境中的包</span><br><span class="line">15. conda remove package #删除当前环境中的包</span><br><span class="line">16. conda env remove -n env_name #采用第10条的方法删除环境失败时，可采用这种方法</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、下载miniconda&quot;&gt;&lt;a href=&quot;#一、下载miniconda&quot; class=&quot;headerlink&quot; title=&quot;一、下载miniconda&quot;&gt;&lt;/a&gt;一、下载miniconda&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.anaco</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Miniconde" scheme="https://sbsb.life/tags/Miniconde/"/>
    
    <category term="Python" scheme="https://sbsb.life/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>机械臂路径规划算法(一)</title>
    <link href="https://sbsb.life/2025/04/04/%E6%9C%BA%E6%A2%B0%E8%87%82%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95(%E4%B8%80)/"/>
    <id>https://sbsb.life/2025/04/04/%E6%9C%BA%E6%A2%B0%E8%87%82%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92%E7%AE%97%E6%B3%95(%E4%B8%80)/</id>
    <published>2025-04-04T12:15:03.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>机械臂路径规划算法是机器人运动控制的核心技术之一，主要目的是在复杂环境中为机械臂规划出安全、高效的运动轨迹。根据算法原理的不同，主要可分为以下三类：</p><ul><li><strong>传统路径规划算法</strong></li><li>智能路径规划算法</li><li>基于采样的路径规划算法</li></ul><p>这节笔记主要讲述传统路径规划算法有哪些，对这些算法进行基本描述与总结</p><hr><h3 id="一、基于图搜索的算法"><a href="#一、基于图搜索的算法" class="headerlink" title="一、基于图搜索的算法"></a>一、基于图搜索的算法</h3><p>通过将环境建模为图结构（如栅格、路标点）进行路径搜索，追求全局最优或次优解。</p><p><strong>配置空间(Configuration Space)<strong>这个概念。在实际环境，也就是机器人的工作空间(Workspace)中，机器人是有形状和大小的，这不利于进行运动规划。要将工作空间转换到配置空间中，即将机器人转化为一个</strong>质点</strong>，同时将障碍物按照机器人的体积进行膨胀，如下图：</p><p><img src="https://imagebed.sbsb.life/v2-4e5fcf1d1f8e4b5572cc1a434659afa7_1440w.jpg" alt="img"></p><h4 id="1-广度优先搜索（-Breadth-First-Search-BFS）"><a href="#1-广度优先搜索（-Breadth-First-Search-BFS）" class="headerlink" title="**1. 广度优先搜索（**Breadth First Search,BFS）"></a>**1. 广度优先搜索（**Breadth First Search,BFS）</h4><ul><li><strong>原理</strong>：逐层遍历所有相邻节点，直到找到目标节点。</li><li><strong>特点</strong>：<ul><li>保证找到最短路径，但效率低。</li><li>适用于小规模栅格地图。</li></ul></li></ul><p><video src="https://imagebed.sbsb.life/d5105682-6549-11eb-b74a-e65cac020e85.mp4"></video></p><p>为了实现波状推进搜索特性，BFS采用**队列(Queue)<strong>作为openlist的数据结构。队列是一种</strong>先进先出(FIFO)**的容器，如下图</p><p><img src="https://imagebed.sbsb.life/v2-02f3d0b8462021d652497b99566216f8_1440w.jpg" alt="img"></p><p>过程如下，首先创建一个队列作为容器，将节点<code>a</code>加入队列</p><p><img src="https://imagebed.sbsb.life/v2-aa91bbd32192bda2ec51e3552d924ba4_1440w.jpg" alt="img"></p><p>接着将节点<code>a</code>弹出队列，将节点<code>a</code>周围没有访问过的节点加入队列</p><p><img src="https://imagebed.sbsb.life/v2-2489dc1fcfd1dd5449d1cffc0755c0d1_1440w.jpg" alt="img"></p><p>按照上面的流程不断地<strong>弹出、扩展</strong>节点，直到找到节点<code>i</code>为止，完整流程如下图：</p><p><img src="https://imagebed.sbsb.life/v2-0e2900fed7202db6b679a89c45acd09d_1440w.jpg" alt="img"></p><p>从终点回溯，<code>i</code>的父节点为<code>f</code>，<code>f</code>的父节点为<code>e</code>，<code>e</code>的父节点为<code>a</code>，这样就可以得到<code>a</code>到<code>i</code>的最短路径为：<code>a</code>-&gt;<code>e</code>-&gt;<code>f</code>-&gt;<code>i</code>，如下</p><p><img src="https://imagebed.sbsb.life/v2-c9ba9f58a19ac363392bf22ee37d32cf_1440w.jpg" alt="img"></p><p>显而易见，相较于DFS，BFS中使用了大量的入队、出队操作，耗时增加，但是能保证找到最优路径。</p><h4 id="2-深度优先搜索（Depth-First-Search-DFS）"><a href="#2-深度优先搜索（Depth-First-Search-DFS）" class="headerlink" title="2. 深度优先搜索（Depth First Search,DFS）"></a>2. 深度优先搜索（Depth First Search,DFS）</h4><ul><li><strong>原理</strong>：沿分支尽可能深入搜索，回溯后继续其他分支。</li><li><strong>特点</strong>：<ul><li>不保证最优解，可能陷入死循环，但内存占用低。</li><li>适用于路径存在性验证。</li></ul></li></ul><p>DFS能够快速地找到一条路径，是一种以时间换空间的方法。将其应用到二维地图的路径规划中，如下图，很显然找到的路径<strong>并不是移动机器人运动规划所需要的最优路径</strong></p><p><video src="https://imagebed.sbsb.life/c745d0a4-6549-11eb-b674-c2e40faa64a4.mp4"></video></p><p>深度优先，顾名思义即深度越大的节点会被优先扩展。在DFS中，使用**栈(Stack)**数据结构来实现上述特性。</p><p>栈是一种**后进先出(LIFO)**的容器，如下图</p><p><img src="https://imagebed.sbsb.life/v2-1201736c4d620d9000912903a4ea76ed_1440w.jpg" alt="img"></p><p>以在下面的<strong>无权图</strong>中找到从节点<code>a</code>到节点<code>i</code>的路径为例，说明一下DFS算法的工作流程</p><p><img src="https://imagebed.sbsb.life/v2-10757452d11155c1ff6619a1a9ee8795_1440w.jpg" alt="img"></p><p>按照上节的图搜索算法的基本流程进行搜索，过程如下：</p><p><img src="https://imagebed.sbsb.life/v2-1c291f985776d67d7b5a31a339ba59b8_1440w.jpg" alt="img"></p><p>从<code>i</code>回溯得到路径：<code>a</code>-&gt;<code>b</code>-&gt;<code>c</code>-&gt;<code>g</code>-&gt;<code>i</code>，如下：</p><p><img src="https://imagebed.sbsb.life/v2-747ff59290263fb613f8f93094fb59da_1440w.jpg" alt="img"></p><h4 id="3-Dijkstra算法-狄克斯特拉算法"><a href="#3-Dijkstra算法-狄克斯特拉算法" class="headerlink" title="3. Dijkstra算法(狄克斯特拉算法)"></a><strong>3. Dijkstra算法(狄克斯特拉算法)</strong></h4><ul><li><strong>原理</strong>：从起点出发，逐步扩展到距离最短的未访问节点，更新邻节点代价。</li><li><strong>特点</strong>：<ul><li><strong>全局最优</strong>，但计算量大。</li><li>适用于静态环境全局规划（如仓储机器人）。</li></ul></li></ul><p><video src="https://imagebed.sbsb.life/0423f15c-654c-11eb-b206-5ac357778cb8.mp4"></video></p><p>以下图为例，计算起点a到终点i的最短路径，箭头上的数值表示<strong>两个节点间的距离</strong></p><p><img src="https://imagebed.sbsb.life/v2-725e087b04cc8529b6c49df6cf013217_1440w.jpg" alt="img"></p><p>首先扩展第一个节点，计算其余节点与第一个节点的距离，用橙色标出已经扩展的节点，未扩展的节点仍用绿色标出，其中圆中的数值表示<strong>该节点的代价函数</strong>，字母则表示该节点没有直接到达此时已扩展节点的路径。从未扩展的节点(绿色节点)中选择代价函数最小的节点进行拓展，并更新其余节点的代价函数，如下图</p><p><img src="https://imagebed.sbsb.life/v2-58fccd0f40a5caaf212b7057131d3ffb_1440w.jpg" alt="img"></p><p>重复进行上面的步骤，直到所有节点都已扩展。</p><p><img src="https://imagebed.sbsb.life/v2-8279c29b19bebe3e2b5a8497413fe86f_1440w.jpg" alt="img"></p><p>最后标出起点到终点的最短路径</p><p><img src="https://imagebed.sbsb.life/v2-8fed59dfa613d14f0786f02e2da5e92a_1440w.jpg" alt="img"></p><p>将Dijkstra算法应用到二维地图路径规划中，如下图，可以看到Dijkstra算法能够得到最优路径，但是它的速度和BFS是一样的，采取的都是稳扎稳打、波状前进的方式，导致速度较慢。</p><p><video src="https://imagebed.sbsb.life/efef11b8-654a-11eb-9922-ae5b475990f4.mp4"></video></p><h4 id="4-A-算法"><a href="#4-A-算法" class="headerlink" title="4. A*算法"></a><strong>4. A*算法</strong></h4><ul><li><strong>原理</strong>：结合Dijkstra的实际代价和启发式估计，优化搜索方向。</li><li><strong>特点</strong>：<ul><li>启发函数需满足可采纳性（如曼哈顿距离）。</li><li>效率高于Dijkstra，广泛应用于游戏和无人机路径规划。</li></ul></li><li><strong>变种</strong>：<ul><li><em><em>D*（动态A</em>）</em>*：支持动态环境下的增量式重规划。</li><li><strong>Weighted A</strong>*：牺牲最优性以提升速度（f(n)&#x3D;g(n)+w⋅h(n)<em>f</em>(<em>n</em>)&#x3D;<em>g</em>(<em>n</em>)+<em>w</em>⋅<em>h</em>(<em>n</em>)）。</li></ul></li></ul><p><video src="https://imagebed.sbsb.life/24256710-654c-11eb-b7ac-aa8e2daa2c27.mp4"></video></p><p>将A*算法应用到二维地图路径规划中，如下图：</p><p><video src="https://imagebed.sbsb.life/2d71c930-654c-11eb-be02-520c53d0139e.mp4"></video></p><h4 id="5-其他图搜索算法"><a href="#5-其他图搜索算法" class="headerlink" title="5. 其他图搜索算法"></a><strong>5. 其他图搜索算法</strong></h4><ul><li><strong>Floyd-Warshall算法</strong>（多源最短路径–弗洛伊德）：计算所有节点对之间的最短路径，适用于多目标规划。Floyd算法又称为插点法，是一种利用动态规划的思想寻找给定的加权图中多源点之间最短路径的算法，与Dijkstra算法类似。该算法名称以创始人之一、1978年图灵奖获得者、斯坦福大学计算机科学系教授罗伯特·弗洛伊德命名。</li><li><strong>Bellman-Ford算法</strong>：支持负权边的最短路径搜索，复杂度 O(n⋅m)<em>O</em>(<em>n</em>⋅<em>m</em>)（m<em>m</em>为边数）。</li></ul><a class="tag-link" href="https://zhuanlan.zhihu.com/p/346666812" target="_blank">    <div class="tag-link-tips">引用站外链接</div>    <div class="tag-link-bottom">        <div class="tag-link-left">          <i class="solitude fas fa-link"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">鬼木士</div>            <div class="tag-link-sitename">路径规划 | 图搜索算法：DFS、BFS、GBFS、Dijkstra、A*</div>        </div>        <i class="solitude fas fa-chevron-right"></i>    </div></a><hr><h3 id="二、基于栅格的规划算法"><a href="#二、基于栅格的规划算法" class="headerlink" title="二、基于栅格的规划算法"></a>二、基于栅格的规划算法</h3><p>将环境离散化为栅格单元，通过栅格状态（自由&#x2F;障碍）规划路径。</p><h4 id="1-波前规划法（Wavefront-Planning）"><a href="#1-波前规划法（Wavefront-Planning）" class="headerlink" title="1. 波前规划法（Wavefront Planning）"></a><strong>1. 波前规划法（Wavefront Planning）</strong></h4><ul><li><strong>原理</strong>：从目标点向外扩散“波前”，标记各栅格到目标的距离，反向生成路径。</li><li><strong>特点</strong>：<ul><li>适合全局静态环境，路径平滑但计算量大。</li><li>常用于扫地机器人全覆盖路径规划。</li></ul></li></ul><h4 id="2-动态窗口法（Dynamic-Window-Approach-DWA）"><a href="#2-动态窗口法（Dynamic-Window-Approach-DWA）" class="headerlink" title="2. 动态窗口法（Dynamic Window Approach, DWA）"></a><strong>2. 动态窗口法（Dynamic Window Approach, DWA）</strong></h4><ul><li><strong>原理</strong>：在速度空间内采样可行轨迹，选择最优局部路径（兼顾避障和速度）。</li><li><strong>特点</strong>：适合移动机器人实时避障，但依赖高精度传感器。</li></ul><p>DWA算法主要包括3个步骤：速度采样、轨迹预测（推算）、轨迹评价。</p><h5 id="Python实现"><a href="#Python实现" class="headerlink" title="Python实现"></a>Python实现</h5><p>完整程序请移步<a href="https://github.com/CHH3213/chhRobotics/tree/master/PathPlanning/%E5%8A%A8%E6%80%81%E7%AA%97%E5%8F%A3%E6%B3%95(DWA)">github仓库</a>。<br>本次代码的参数配置和画图代码参考了<a href="https://github.com/AtsushiSakai/PythonRobotics/blob/master/PathPlanning/DynamicWindowApproach/dynamic_window_approach.py">AtsushiSakai&#x2F;PythonRobotics </a>。</p><h6 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">from</span> celluloid <span class="keyword">import</span> Camera  <span class="comment"># 保存动图时用，pip install celluloid</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Config</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    simulation parameter class</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="comment"># robot parameter</span></span><br><span class="line">    <span class="comment"># 线速度边界</span></span><br><span class="line">    <span class="variable language_">self</span>.v_max = <span class="number">1.0</span>  <span class="comment"># [m/s]</span></span><br><span class="line">    <span class="variable language_">self</span>.v_min = -<span class="number">0.5</span>  <span class="comment"># [m/s]</span></span><br><span class="line">    <span class="comment"># 角速度边界</span></span><br><span class="line">    <span class="variable language_">self</span>.w_max = <span class="number">40.0</span> * math.pi / <span class="number">180.0</span>  <span class="comment"># [rad/s]</span></span><br><span class="line">    <span class="variable language_">self</span>.w_min = -<span class="number">40.0</span> * math.pi / <span class="number">180.0</span>  <span class="comment"># [rad/s]</span></span><br><span class="line">    <span class="comment"># 线加速度和角加速度最大值</span></span><br><span class="line">    <span class="variable language_">self</span>.a_vmax = <span class="number">0.2</span>  <span class="comment"># [m/ss]</span></span><br><span class="line">    <span class="variable language_">self</span>.a_wmax = <span class="number">40.0</span> * math.pi / <span class="number">180.0</span>  <span class="comment"># [rad/ss]</span></span><br><span class="line">    <span class="comment"># 采样分辨率 </span></span><br><span class="line">    <span class="variable language_">self</span>.v_sample = <span class="number">0.01</span>  <span class="comment"># [m/s]</span></span><br><span class="line">    <span class="variable language_">self</span>.w_sample = <span class="number">0.1</span> * math.pi / <span class="number">180.0</span>  <span class="comment"># [rad/s]</span></span><br><span class="line">    <span class="comment"># 离散时间间隔</span></span><br><span class="line">    <span class="variable language_">self</span>.dt = <span class="number">0.1</span>  <span class="comment"># [s] Time tick for motion prediction</span></span><br><span class="line">    <span class="comment"># 轨迹推算时间长度</span></span><br><span class="line">    <span class="variable language_">self</span>.predict_time = <span class="number">3.0</span>  <span class="comment"># [s]</span></span><br><span class="line">    <span class="comment"># 轨迹评价函数系数</span></span><br><span class="line">    <span class="variable language_">self</span>.alpha = <span class="number">0.15</span></span><br><span class="line">    <span class="variable language_">self</span>.beta = <span class="number">1.0</span></span><br><span class="line">    <span class="variable language_">self</span>.gamma = <span class="number">1.0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Also used to check if goal is reached in both types</span></span><br><span class="line">    <span class="variable language_">self</span>.robot_radius = <span class="number">1.0</span>  <span class="comment"># [m] for collision check</span></span><br><span class="line">    </span><br><span class="line">    <span class="variable language_">self</span>.judge_distance = <span class="number">10</span> <span class="comment"># 若与障碍物的最小距离大于阈值（例如这里设置的阈值为robot_radius+0.2）,则设为一个较大的常值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 障碍物位置 [x(m) y(m), ....]</span></span><br><span class="line">    <span class="variable language_">self</span>.ob = np.array([[-<span class="number">1</span>, -<span class="number">1</span>],</span><br><span class="line">                [<span class="number">0</span>, <span class="number">2</span>],</span><br><span class="line">                [<span class="number">4.0</span>, <span class="number">2.0</span>],</span><br><span class="line">                [<span class="number">5.0</span>, <span class="number">4.0</span>],</span><br><span class="line">                [<span class="number">5.0</span>, <span class="number">5.0</span>],</span><br><span class="line">                [<span class="number">5.0</span>, <span class="number">6.0</span>],</span><br><span class="line">                [<span class="number">5.0</span>, <span class="number">9.0</span>],</span><br><span class="line">                [<span class="number">8.0</span>, <span class="number">9.0</span>],</span><br><span class="line">                [<span class="number">7.0</span>, <span class="number">9.0</span>],</span><br><span class="line">                [<span class="number">8.0</span>, <span class="number">10.0</span>],</span><br><span class="line">                [<span class="number">9.0</span>, <span class="number">11.0</span>],</span><br><span class="line">                [<span class="number">12.0</span>, <span class="number">13.0</span>],</span><br><span class="line">                [<span class="number">12.0</span>, <span class="number">12.0</span>],</span><br><span class="line">                [<span class="number">15.0</span>, <span class="number">15.0</span>],</span><br><span class="line">                [<span class="number">13.0</span>, <span class="number">13.0</span>]</span><br><span class="line">                ])</span><br><span class="line">    <span class="comment"># 目标点位置</span></span><br><span class="line">    <span class="variable language_">self</span>.target = np.array([<span class="number">10</span>,<span class="number">10</span>])</span><br></pre></td></tr></table></figure><p>值得注意的是，这边障碍物只给了位置，并没有给定大小，因为这边相当于把障碍物的大小合并到了机器人本体大小上，也即代码中的<code>robot_radius</code>上。</p><h6 id="机器人运动学模型"><a href="#机器人运动学模型" class="headerlink" title="机器人运动学模型"></a>机器人运动学模型</h6><p>主要用于轨迹推算。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">KinematicModel</span>(<span class="params">state,control,dt</span>):</span><br><span class="line">  <span class="string">&quot;&quot;&quot;机器人运动学模型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Args:</span></span><br><span class="line"><span class="string">      state (_type_): 状态量---x,y,yaw,v,w</span></span><br><span class="line"><span class="string">      control (_type_): 控制量---v,w,线速度和角速度</span></span><br><span class="line"><span class="string">      dt (_type_): 离散时间</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Returns:</span></span><br><span class="line"><span class="string">      _type_: 下一步的状态</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">  state[<span class="number">0</span>] += control[<span class="number">0</span>] * math.cos(state[<span class="number">2</span>]) * dt</span><br><span class="line">  state[<span class="number">1</span>] += control[<span class="number">0</span>] * math.sin(state[<span class="number">2</span>]) * dt</span><br><span class="line">  state[<span class="number">2</span>] += control[<span class="number">1</span>] * dt</span><br><span class="line">  state[<span class="number">3</span>] = control[<span class="number">0</span>]</span><br><span class="line">  state[<span class="number">4</span>] = control[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> state</span><br></pre></td></tr></table></figure><p>在这里顺便保存了线速度和角速度作为状态分量，便于后面轨迹计算。</p><h6 id="DWA算法类实现"><a href="#DWA算法类实现" class="headerlink" title="DWA算法类实现"></a>DWA算法类实现</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DWA</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,config</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            config (_type_): 参数类</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.dt=config.dt</span><br><span class="line">        <span class="variable language_">self</span>.v_min=config.v_min</span><br><span class="line">        <span class="variable language_">self</span>.w_min=config.w_min</span><br><span class="line">        <span class="variable language_">self</span>.v_max=config.v_max</span><br><span class="line">        <span class="variable language_">self</span>.w_max=config.w_max</span><br><span class="line">        <span class="variable language_">self</span>.predict_time = config.predict_time</span><br><span class="line">        <span class="variable language_">self</span>.a_vmax = config.a_vmax</span><br><span class="line">        <span class="variable language_">self</span>.a_wmax = config.a_wmax</span><br><span class="line">        <span class="variable language_">self</span>.v_sample = config.v_sample <span class="comment"># 线速度采样分辨率</span></span><br><span class="line">        <span class="variable language_">self</span>.w_sample = config.w_sample <span class="comment"># 角速度采样分辨率</span></span><br><span class="line">        <span class="variable language_">self</span>.alpha = config.alpha</span><br><span class="line">        <span class="variable language_">self</span>.beta = config.beta</span><br><span class="line">        <span class="variable language_">self</span>.gamma = config.gamma</span><br><span class="line">        <span class="variable language_">self</span>.radius = config.robot_radius</span><br><span class="line">        <span class="variable language_">self</span>.judge_distance = config.judge_distance</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dwa_control</span>(<span class="params">self,state,goal,obstacle</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;滚动窗口算法入口</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            state (_type_): 机器人当前状态--[x,y,yaw,v,w]</span></span><br><span class="line"><span class="string">            goal (_type_): 目标点位置，[x,y]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            obstacle (_type_): 障碍物位置，dim:[num_ob,2]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: 控制量、轨迹（便于绘画）</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        control,trajectory = <span class="variable language_">self</span>.trajectory_evaluation(state,goal,obstacle)</span><br><span class="line">        <span class="keyword">return</span> control,trajectory</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">cal_dynamic_window_vel</span>(<span class="params">self,v,w,state,obstacle</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;速度采样,得到速度空间窗口</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            v (_type_): 当前时刻线速度</span></span><br><span class="line"><span class="string">            w (_type_): 当前时刻角速度</span></span><br><span class="line"><span class="string">            state (_type_): 当前机器人状态</span></span><br><span class="line"><span class="string">            obstacle (_type_): 障碍物位置</span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            [v_low,v_high,w_low,w_high]: 最终采样后的速度空间</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        Vm = <span class="variable language_">self</span>.__cal_vel_limit()</span><br><span class="line">        Vd = <span class="variable language_">self</span>.__cal_accel_limit(v,w)</span><br><span class="line">        Va = <span class="variable language_">self</span>.__cal_obstacle_limit(state,obstacle)</span><br><span class="line">        a = <span class="built_in">max</span>([Vm[<span class="number">0</span>],Vd[<span class="number">0</span>],Va[<span class="number">0</span>]])</span><br><span class="line">        b = <span class="built_in">min</span>([Vm[<span class="number">1</span>],Vd[<span class="number">1</span>],Va[<span class="number">1</span>]])</span><br><span class="line">        c = <span class="built_in">max</span>([Vm[<span class="number">2</span>], Vd[<span class="number">2</span>],Va[<span class="number">2</span>]])</span><br><span class="line">        d = <span class="built_in">min</span>([Vm[<span class="number">3</span>], Vd[<span class="number">3</span>],Va[<span class="number">3</span>]])</span><br><span class="line">        <span class="keyword">return</span> [a,b,c,d]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__cal_vel_limit</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;计算速度边界限制Vm</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: 速度边界限制后的速度空间Vm</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable language_">self</span>.v_min,<span class="variable language_">self</span>.v_max,<span class="variable language_">self</span>.w_min,<span class="variable language_">self</span>.w_max]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__cal_accel_limit</span>(<span class="params">self,v,w</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;计算加速度限制Vd</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            v (_type_): 当前时刻线速度</span></span><br><span class="line"><span class="string">            w (_type_): 当前时刻角速度</span></span><br><span class="line"><span class="string">        Returns: </span></span><br><span class="line"><span class="string">            _type_:考虑加速度时的速度空间Vd</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        v_low = v-<span class="variable language_">self</span>.a_vmax*<span class="variable language_">self</span>.dt</span><br><span class="line">        v_high = v+<span class="variable language_">self</span>.a_vmax*<span class="variable language_">self</span>.dt</span><br><span class="line">        w_low = w-<span class="variable language_">self</span>.a_wmax*<span class="variable language_">self</span>.dt</span><br><span class="line">        w_high = w+<span class="variable language_">self</span>.a_wmax*<span class="variable language_">self</span>.dt</span><br><span class="line">        <span class="keyword">return</span> [v_low, v_high,w_low, w_high]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__cal_obstacle_limit</span>(<span class="params">self,state,obstacle</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;环境障碍物限制Va</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            state (_type_): 当前机器人状态</span></span><br><span class="line"><span class="string">            obstacle (_type_): 障碍物位置</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: 某一时刻移动机器人不与周围障碍物发生碰撞的速度空间Va</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        v_low=<span class="variable language_">self</span>.v_min</span><br><span class="line">        v_high = np.sqrt(<span class="number">2</span>*<span class="variable language_">self</span>._dist(state,obstacle)*<span class="variable language_">self</span>.a_vmax)</span><br><span class="line">        w_low =<span class="variable language_">self</span>.w_min</span><br><span class="line">        w_high = np.sqrt(<span class="number">2</span>*<span class="variable language_">self</span>._dist(state,obstacle)*<span class="variable language_">self</span>.a_wmax)</span><br><span class="line">        <span class="keyword">return</span> [v_low,v_high,w_low,w_high]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">trajectory_predict</span>(<span class="params">self,state_init, v,w</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;轨迹推算</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            state_init (_type_): 当前状态---x,y,yaw,v,w</span></span><br><span class="line"><span class="string">            v (_type_): 当前时刻线速度</span></span><br><span class="line"><span class="string">            w (_type_): 当前时刻线速度</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: _description_</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        state = np.array(state_init)</span><br><span class="line">        trajectory = state</span><br><span class="line">        time = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 在预测时间段内</span></span><br><span class="line">        <span class="keyword">while</span> time &lt;= <span class="variable language_">self</span>.predict_time:</span><br><span class="line">            x = KinematicModel(state, [v,w], <span class="variable language_">self</span>.dt) <span class="comment"># 运动学模型</span></span><br><span class="line">            trajectory = np.vstack((trajectory, x))</span><br><span class="line">            time += <span class="variable language_">self</span>.dt</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> trajectory</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">trajectory_evaluation</span>(<span class="params">self,state,goal,obstacle</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;轨迹评价函数,评价越高，轨迹越优</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            state (_type_): 当前状态---x,y,yaw,v,w</span></span><br><span class="line"><span class="string">            dynamic_window_vel (_type_): 采样的速度空间窗口---[v_low,v_high,w_low,w_high]</span></span><br><span class="line"><span class="string">            goal (_type_): 目标点位置，[x,y]</span></span><br><span class="line"><span class="string">            obstacle (_type_): 障碍物位置，dim:[num_ob,2]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: 最优控制量、最优轨迹</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        G_max = -<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>) <span class="comment"># 最优评价</span></span><br><span class="line">        trajectory_opt = state <span class="comment"># 最优轨迹</span></span><br><span class="line">        control_opt = [<span class="number">0.</span>,<span class="number">0.</span>] <span class="comment"># 最优控制</span></span><br><span class="line">        dynamic_window_vel = <span class="variable language_">self</span>.cal_dynamic_window_vel(state[<span class="number">3</span>], state[<span class="number">4</span>],state,obstacle) <span class="comment"># 第1步--计算速度空间</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># sum_heading,sum_dist,sum_vel = 0,0,0 # 统计全部采样轨迹的各个评价之和，便于评价的归一化</span></span><br><span class="line">        <span class="comment"># # 在本次实验中，不进行归一化也可实现该有的效果。</span></span><br><span class="line">        <span class="comment"># for v in np.arange(dynamic_window_vel[0],dynamic_window_vel[1],self.v_sample):</span></span><br><span class="line">        <span class="comment">#     for w in np.arange(dynamic_window_vel[2], dynamic_window_vel[3], self.w_sample):   </span></span><br><span class="line">        <span class="comment">#         trajectory = self.trajectory_predict(state, v, w)  </span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#         heading_eval = self.alpha*self.__heading(trajectory,goal)</span></span><br><span class="line">        <span class="comment">#         dist_eval = self.beta*self.__dist(trajectory,obstacle)</span></span><br><span class="line">        <span class="comment">#         vel_eval = self.gamma*self.__velocity(trajectory)</span></span><br><span class="line">        <span class="comment">#         sum_vel+=vel_eval</span></span><br><span class="line">        <span class="comment">#         sum_dist+=dist_eval</span></span><br><span class="line">        <span class="comment">#         sum_heading +=heading_eval</span></span><br><span class="line"></span><br><span class="line">        sum_heading,sum_dist,sum_vel = <span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span> <span class="comment"># 不进行归一化</span></span><br><span class="line">        <span class="comment"># 在速度空间中按照预先设定的分辨率采样</span></span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> np.arange(dynamic_window_vel[<span class="number">0</span>],dynamic_window_vel[<span class="number">1</span>],<span class="variable language_">self</span>.v_sample):</span><br><span class="line">            <span class="keyword">for</span> w <span class="keyword">in</span> np.arange(dynamic_window_vel[<span class="number">2</span>], dynamic_window_vel[<span class="number">3</span>], <span class="variable language_">self</span>.w_sample):</span><br><span class="line"></span><br><span class="line">                trajectory = <span class="variable language_">self</span>.trajectory_predict(state, v, w)  <span class="comment"># 第2步--轨迹推算</span></span><br><span class="line"></span><br><span class="line">                heading_eval = <span class="variable language_">self</span>.alpha*<span class="variable language_">self</span>.__heading(trajectory,goal)/sum_heading</span><br><span class="line">                dist_eval = <span class="variable language_">self</span>.beta*<span class="variable language_">self</span>.__dist(trajectory,obstacle)/sum_dist</span><br><span class="line">                vel_eval = <span class="variable language_">self</span>.gamma*<span class="variable language_">self</span>.__velocity(trajectory)/sum_vel</span><br><span class="line">                G = heading_eval+dist_eval+vel_eval <span class="comment"># 第3步--轨迹评价</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> G_max&lt;=G:</span><br><span class="line">                    G_max = G</span><br><span class="line">                    trajectory_opt = trajectory</span><br><span class="line">                    control_opt = [v,w]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> control_opt, trajectory_opt</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_dist</span>(<span class="params">self,state,obstacle</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;计算当前移动机器人距离障碍物最近的几何距离</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            state (_type_): 当前机器人状态</span></span><br><span class="line"><span class="string">            obstacle (_type_): 障碍物位置</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: 移动机器人距离障碍物最近的几何距离</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        ox = obstacle[:, <span class="number">0</span>]</span><br><span class="line">        oy = obstacle[:, <span class="number">1</span>]</span><br><span class="line">        dx = state[<span class="number">0</span>,<span class="literal">None</span>] - ox[:, <span class="literal">None</span>]</span><br><span class="line">        dy = state[<span class="number">1</span>,<span class="literal">None</span>] - oy[:, <span class="literal">None</span>]</span><br><span class="line">        r = np.hypot(dx, dy)</span><br><span class="line">        <span class="keyword">return</span> np.<span class="built_in">min</span>(r)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__dist</span>(<span class="params">self,trajectory,obstacle</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;距离评价函数</span></span><br><span class="line"><span class="string">        表示当前速度下对应模拟轨迹与障碍物之间的最近距离；</span></span><br><span class="line"><span class="string">        如果没有障碍物或者最近距离大于设定的阈值，那么就将其值设为一个较大的常数值。</span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            trajectory (_type_): 轨迹，dim:[n,5]</span></span><br><span class="line"><span class="string">            </span></span><br><span class="line"><span class="string">            obstacle (_type_): 障碍物位置，dim:[num_ob,2]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: _description_</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        ox = obstacle[:, <span class="number">0</span>]</span><br><span class="line">        oy = obstacle[:, <span class="number">1</span>]</span><br><span class="line">        dx = trajectory[:, <span class="number">0</span>] - ox[:, <span class="literal">None</span>]</span><br><span class="line">        dy = trajectory[:, <span class="number">1</span>] - oy[:, <span class="literal">None</span>]</span><br><span class="line">        r = np.hypot(dx, dy)</span><br><span class="line">        <span class="keyword">return</span> np.<span class="built_in">min</span>(r) <span class="keyword">if</span> np.array(r &lt;<span class="variable language_">self</span>.radius+<span class="number">0.2</span>).<span class="built_in">any</span>() <span class="keyword">else</span> <span class="variable language_">self</span>.judge_distance</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__heading</span>(<span class="params">self,trajectory, goal</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;方位角评价函数</span></span><br><span class="line"><span class="string">        评估在当前采样速度下产生的轨迹终点位置方向与目标点连线的夹角的误差</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            trajectory (_type_): 轨迹，dim:[n,5]</span></span><br><span class="line"><span class="string">            goal (_type_): 目标点位置[x,y]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: 方位角评价数值</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        dx = goal[<span class="number">0</span>] - trajectory[-<span class="number">1</span>, <span class="number">0</span>]</span><br><span class="line">        dy = goal[<span class="number">1</span>] - trajectory[-<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">        error_angle = math.atan2(dy, dx)</span><br><span class="line">        cost_angle = error_angle - trajectory[-<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">        cost = math.pi-<span class="built_in">abs</span>(cost_angle)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> cost</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__velocity</span>(<span class="params">self,trajectory</span>):</span><br><span class="line">        <span class="string">&quot;&quot;&quot;速度评价函数， 表示当前的速度大小，可以用模拟轨迹末端位置的线速度的大小来表示</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            trajectory (_type_): 轨迹，dim:[n,5]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            _type_: 速度评价</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> trajectory[-<span class="number">1</span>,<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从后面的实验效果上看，这边没有进行归一化也是可以的。</p><h6 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h6><p>主要用于机器人和方向箭头的绘制。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">plot_arrow</span>(<span class="params">x, y, yaw, length=<span class="number">0.5</span>, width=<span class="number">0.1</span></span>):  <span class="comment"># pragma: no cover</span></span><br><span class="line">    plt.arrow(x, y, length * math.cos(yaw), length * math.sin(yaw),</span><br><span class="line">              head_length=width, head_width=width)</span><br><span class="line">    plt.plot(x, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_robot</span>(<span class="params">x, y, yaw, config</span>):  <span class="comment"># pragma: no cover</span></span><br><span class="line">        circle = plt.Circle((x, y), config.robot_radius, color=<span class="string">&quot;b&quot;</span>)</span><br><span class="line">        plt.gcf().gca().add_artist(circle)</span><br><span class="line">        out_x, out_y = (np.array([x, y]) +</span><br><span class="line">                        np.array([np.cos(yaw), np.sin(yaw)]) * config.robot_radius)</span><br><span class="line">        plt.plot([x, out_x], [y, out_y], <span class="string">&quot;-k&quot;</span>)</span><br></pre></td></tr></table></figure><h6 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">config</span>):</span><br><span class="line">    <span class="comment"># initial state [x(m), y(m), yaw(rad), v(m/s), omega(rad/s)]</span></span><br><span class="line">    x = np.array([<span class="number">0.0</span>, <span class="number">0.0</span>, math.pi / <span class="number">8.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>])</span><br><span class="line">    <span class="comment"># goal position [x(m), y(m)]</span></span><br><span class="line">    goal = config.target</span><br><span class="line"></span><br><span class="line">    <span class="comment"># input [forward speed, yaw_rate]</span></span><br><span class="line"></span><br><span class="line">    trajectory = np.array(x)</span><br><span class="line">    ob = config.ob</span><br><span class="line">    dwa = DWA(config)</span><br><span class="line">    fig=plt.figure(<span class="number">1</span>)</span><br><span class="line">    camera = Camera(fig)</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        u, predicted_trajectory = dwa.dwa_control(x,goal, ob)</span><br><span class="line"></span><br><span class="line">        x = KinematicModel(x, u, config.dt)  <span class="comment"># simulate robot</span></span><br><span class="line">        trajectory = np.vstack((trajectory, x))  <span class="comment"># store state history</span></span><br><span class="line">        plt.cla()</span><br><span class="line">        <span class="comment"># for stopping simulation with the esc key.</span></span><br><span class="line">        plt.gcf().canvas.mpl_connect(</span><br><span class="line">            <span class="string">&#x27;key_release_event&#x27;</span>,</span><br><span class="line">            <span class="keyword">lambda</span> event: [exit(<span class="number">0</span>) <span class="keyword">if</span> event.key == <span class="string">&#x27;escape&#x27;</span> <span class="keyword">else</span> <span class="literal">None</span>])</span><br><span class="line">        plt.plot(predicted_trajectory[:, <span class="number">0</span>], predicted_trajectory[:, <span class="number">1</span>], <span class="string">&quot;-g&quot;</span>)</span><br><span class="line">        plt.plot(x[<span class="number">0</span>], x[<span class="number">1</span>], <span class="string">&quot;xr&quot;</span>)</span><br><span class="line">        plt.plot(goal[<span class="number">0</span>], goal[<span class="number">1</span>], <span class="string">&quot;xb&quot;</span>)</span><br><span class="line">        plt.plot(ob[:, <span class="number">0</span>], ob[:, <span class="number">1</span>], <span class="string">&quot;ok&quot;</span>)</span><br><span class="line">        plot_robot(x[<span class="number">0</span>], x[<span class="number">1</span>], x[<span class="number">2</span>], config)</span><br><span class="line">        plot_arrow(x[<span class="number">0</span>], x[<span class="number">1</span>], x[<span class="number">2</span>])</span><br><span class="line">        plt.axis(<span class="string">&quot;equal&quot;</span>)</span><br><span class="line">        plt.grid(<span class="literal">True</span>)</span><br><span class="line">        plt.pause(<span class="number">0.001</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># check reaching goal</span></span><br><span class="line">        dist_to_goal = math.hypot(x[<span class="number">0</span>] - goal[<span class="number">0</span>], x[<span class="number">1</span>] - goal[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">if</span> dist_to_goal &lt;= config.robot_radius:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Goal!!&quot;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="comment"># camera.snap()</span></span><br><span class="line">        <span class="comment"># print(x)</span></span><br><span class="line">        <span class="comment"># print(u)</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Done&quot;</span>)</span><br><span class="line">    plt.plot(trajectory[:, <span class="number">0</span>], trajectory[:, <span class="number">1</span>], <span class="string">&quot;-r&quot;</span>)</span><br><span class="line">    plt.pause(<span class="number">0.001</span>)</span><br><span class="line">    <span class="comment"># camera.snap()</span></span><br><span class="line">    <span class="comment"># animation = camera.animate()</span></span><br><span class="line">    <span class="comment"># animation.save(&#x27;trajectory.gif&#x27;)</span></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main(Config())</span><br></pre></td></tr></table></figure><p>运行主函数，即可得到下图所示的效果：</p><p><img src="https://imagebed.sbsb.life/91bddf9f1de48d2899d2d6b112a6b885.gif" alt="在这里插入图片描述"></p><a class="tag-link" href="https://blog.csdn.net/weixin42301220/article/details/127769819" target="_blank">    <div class="tag-link-tips">引用站外链接</div>    <div class="tag-link-bottom">        <div class="tag-link-left">          <i class="solitude fas fa-link"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">CHH3213</div>            <div class="tag-link-sitename">局部路径规划算法——DWA算法</div>        </div>        <i class="solitude fas fa-chevron-right"></i>    </div></a><hr><h3 id="三、人工势场法（Artificial-Potential-Field-APF）"><a href="#三、人工势场法（Artificial-Potential-Field-APF）" class="headerlink" title="三、人工势场法（Artificial Potential Field, APF）"></a>三、人工势场法（Artificial Potential Field, APF）</h3><ul><li><strong>原理</strong>：目标点产生引力，障碍物产生斥力，合力引导机器人运动。</li><li><strong>改进方法</strong>：<ul><li><strong>虚拟力场法</strong>：引入旋转力解决局部极小问题。</li><li><strong>势场+随机扰动</strong>：通过随机扰动逃离局部极小（如U型陷阱）。</li></ul></li><li><strong>应用</strong>：机械臂末端实时避障、无人机动态路径调整。</li></ul><hr><h3 id="四、基于动态规划的算法"><a href="#四、基于动态规划的算法" class="headerlink" title="四、基于动态规划的算法"></a>四、基于动态规划的算法</h3><p>通过递推公式求解多阶段决策问题，适用于离散状态空间。</p><h4 id="1-值迭代（Value-Iteration）"><a href="#1-值迭代（Value-Iteration）" class="headerlink" title="1. 值迭代（Value Iteration）"></a><strong>1. 值迭代（Value Iteration）</strong></h4><ul><li><strong>原理</strong>：迭代更新各状态的最优值函数，最终回溯路径。</li><li><strong>特点</strong>：<ul><li>适合马尔可夫决策过程（MDP），但计算复杂度高。</li></ul></li></ul><h4 id="2-策略迭代（Policy-Iteration）"><a href="#2-策略迭代（Policy-Iteration）" class="headerlink" title="2. 策略迭代（Policy Iteration）"></a><strong>2. 策略迭代（Policy Iteration）</strong></h4><ul><li><strong>原理</strong>：交替优化策略和值函数，收敛速度快于值迭代。</li></ul><hr><h3 id="五、基于几何的规划算法"><a href="#五、基于几何的规划算法" class="headerlink" title="五、基于几何的规划算法"></a>五、基于几何的规划算法</h3><p>利用几何学原理直接生成路径，适用于结构化环境。</p><h4 id="1-可见图法（Visibility-Graph）"><a href="#1-可见图法（Visibility-Graph）" class="headerlink" title="1. 可见图法（Visibility Graph）"></a><strong>1. 可见图法（Visibility Graph）</strong></h4><ul><li><strong>原理</strong>：连接障碍物顶点与起点&#x2F;目标点，构建可见边网络，搜索最短路径。</li><li><strong>特点</strong>：<ul><li>路径为折线段，全局最优，但计算复杂度高（O(n3)<em>O</em>(<em>n</em>3)）。</li><li>适用于多边形障碍物环境（如室内导航）。</li></ul></li></ul><hr><h3 id="六、传统算法的改进与混合方法"><a href="#六、传统算法的改进与混合方法" class="headerlink" title="六、传统算法的改进与混合方法"></a>六、传统算法的改进与混合方法</h3><h4 id="1-Hybrid-A"><a href="#1-Hybrid-A" class="headerlink" title="1. Hybrid A*"></a><strong>1. Hybrid A</strong>*</h4><ul><li><strong>原理</strong>：结合连续状态空间和离散搜索，解决车辆运动学约束问题。</li><li><strong>应用</strong>：自动驾驶汽车的路径规划。</li></ul><h4 id="2-APF-图搜索"><a href="#2-APF-图搜索" class="headerlink" title="2. APF + 图搜索"></a><strong>2. APF + 图搜索</strong></h4><ul><li><strong>原理</strong>：先用A*生成全局路径，再用APF实时避障。</li><li><strong>优势</strong>：兼顾全局最优性和动态适应性。</li></ul><h4 id="3-D-Lite"><a href="#3-D-Lite" class="headerlink" title="3. D* Lite"></a><strong>3. D* Lite</strong></h4><ul><li><strong>原理</strong>：增量式重规划算法，高效处理动态环境变化。</li><li><strong>应用</strong>：火星探测车、战场机器人</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;机械臂路径规划算法是机器人运动控制的核心技术之一，主要目的是在复杂环境中为机械臂规划出安全、高效的运动轨迹。根据算法原理的不同，主要可分为以</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="机械臂" scheme="https://sbsb.life/tags/%E6%9C%BA%E6%A2%B0%E8%87%82/"/>
    
    <category term="路径规划" scheme="https://sbsb.life/tags/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
    <category term="Dijkstra算法" scheme="https://sbsb.life/tags/Dijkstra%E7%AE%97%E6%B3%95/"/>
    
    <category term="A*算法" scheme="https://sbsb.life/tags/A-%E7%AE%97%E6%B3%95/"/>
    
    <category term="DFS" scheme="https://sbsb.life/tags/DFS/"/>
    
    <category term="BFS" scheme="https://sbsb.life/tags/BFS/"/>
    
  </entry>
  
  <entry>
    <title>加入BlogsClub 博客俱乐部</title>
    <link href="https://sbsb.life/2025/03/28/BlogsClub%20-%20%E5%8D%9A%E5%AE%A2%E6%89%80%E6%9C%89%E6%9D%83%E8%AE%A4%E8%AF%81/"/>
    <id>https://sbsb.life/2025/03/28/BlogsClub%20-%20%E5%8D%9A%E5%AE%A2%E6%89%80%E6%9C%89%E6%9D%83%E8%AE%A4%E8%AF%81/</id>
    <published>2025-03-28T03:19:05.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Tannerの笔记正式加入BlogsClub 博客俱乐部</p><h3 id="BlogsClub-博客俱乐部的初衷"><a href="#BlogsClub-博客俱乐部的初衷" class="headerlink" title="BlogsClub 博客俱乐部的初衷"></a>BlogsClub 博客俱乐部的初衷</h3><p>我们的初衷是通过 BlogsClub 打造一个独立的个人博客集结地，旨在为博主们提供一个互相交流、学习和进步的空间，让博主们能够在这里共同分享彼此的经验和知识，共同进步。</p><h3 id="关于-BlogsClub-博客俱乐部"><a href="#关于-BlogsClub-博客俱乐部" class="headerlink" title="关于 BlogsClub 博客俱乐部"></a>关于 BlogsClub 博客俱乐部</h3><h4 id="BlogsClub-是什么？"><a href="#BlogsClub-是什么？" class="headerlink" title="BlogsClub 是什么？"></a>BlogsClub 是什么？</h4><p>许多人或许都怀揣着这样的疑问：如何让自己的博客能够脱颖而出，获得更多的关注与展示？BlogsClub 正是这样一个为你量身打造的博客聚合俱乐部，致力于为每一位博主提供一个展示自我、互动交流的绝佳平台。<br>一旦你成为 BlogsClub 的一员，你的博客将有机会展现在众多博主的眼前。我们的平台汇聚了来自五湖四海的优质博客，让每一位成员的佳作都能得到充分的展示机会。这意味着，你的独特视角和精彩内容将不再局限于自己的小圈子，而是能够吸引更多志同道合的朋友前来品味分享。<br>BlogsClub 通过 feed 聚合技术，让你能够在“订阅列表”中轻松查看加入的博主们最近发布的文章。这不仅节省了你四处搜寻的时间，还能让你第一时间捕捉到行业内的最新动态和精彩观点。在这个信息爆炸的时代，能够迅速获取有价值的信息无疑是一种宝贵的能力。<br>更值得一提的是，我们的平台还提供了便捷的传送门功能。只需轻轻一点，你便能随机访问其他博主的博客站点，深入了解他们的创作理念和心得体会。这种即时的互动交流不仅能够拓宽你的视野，还能激发你的创作灵感，让你在博客的道路上越走越远。<br>此外，BlogsClub 还致力于打造一个和谐友善的交流环境。在这里，博主们可以互相拜访、畅所欲言，分享彼此的经验教训，共同进步。我们相信，在这样的氛围中，每个人都能找到属于自己的那片星空，绽放出最耀眼的光芒。<br>总之，加入 BlogsClub 将为你开启一段全新的博客之旅。在这里，你将有机会展示自己的才华，结识志同道合的朋友，共同探索博客世界的无限可能</p><h4 id="关于-BlogsClub-建立者"><a href="#关于-BlogsClub-建立者" class="headerlink" title="关于 BlogsClub 建立者"></a>关于 BlogsClub 建立者</h4><p>BlogsClub 项目由 BearNotion Team 发起，并由 BearNotion Team 完成所有构建，后续由 BlogsClub 项目组进行维护。</p><h4 id="BlogsClub-是为爱发电吗？"><a href="#BlogsClub-是为爱发电吗？" class="headerlink" title="BlogsClub 是为爱发电吗？"></a>BlogsClub 是为爱发电吗？</h4><p>是的，从建立到现在，一直都是为爱发电。</p><h3 id="如何加入-BlogsClub-博客俱乐部"><a href="#如何加入-BlogsClub-博客俱乐部" class="headerlink" title="如何加入 BlogsClub 博客俱乐部"></a>如何加入 BlogsClub 博客俱乐部</h3><p>我们诚挚的邀请您加入到 BlogsClub 博客俱乐部中来，与其他博主分享您的建站经验和建站故事。<br>若有意愿加入，请前请先阅读<a href="https://www.blogsclub.org/clubsTreaty.html">俱乐部条约</a>然后<a href="https://www.blogsclub.org/apply.html?inviteCode=7c104bc4">点我填写申请表</a></p><p><strong>(<a href="https://www.blogsclub.org/blog/229.html">哈喽！Tannerの笔记 - BlogsClub</a>)期待与您在 BlogsClub 博客俱乐部相遇</strong></p><h3 id="联系-BlogsClub-博客俱乐部"><a href="#联系-BlogsClub-博客俱乐部" class="headerlink" title="联系 BlogsClub 博客俱乐部"></a>联系 BlogsClub 博客俱乐部</h3><p><strong>您可以通过以下方式联系到我们</strong><br>Email : <a href="mailto:&#104;&#101;&#x6c;&#112;&#64;&#98;&#x6c;&#111;&#x67;&#115;&#99;&#108;&#117;&#x62;&#46;&#x6f;&#114;&#x67;">help@blogsclub.org</a><br>QQ 群 : 957197421</p><a class="tag-link" href="https://www.blogsclub.org/" target="_blank">    <div class="tag-link-tips">引用站外链接</div>    <div class="tag-link-bottom">        <div class="tag-link-left">          <i class="solitude fas fa-link"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">BlogsClub</div>            <div class="tag-link-sitename">BlogsClub个人博客俱乐部</div>        </div>        <i class="solitude fas fa-chevron-right"></i>    </div></a>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;Tannerの笔记正式加入BlogsClub 博客俱乐部&lt;/p&gt;
&lt;h3 id=&quot;BlogsClub-博客俱乐部的初衷&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="网站建设" scheme="https://sbsb.life/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="BlogsClub" scheme="https://sbsb.life/tags/BlogsClub/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly主题更换至Solitude主题</title>
    <link href="https://sbsb.life/2025/03/16/Butterfly%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%8D%A2%E8%87%B3Solitude%E4%B8%BB%E9%A2%98/"/>
    <id>https://sbsb.life/2025/03/16/Butterfly%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%8D%A2%E8%87%B3Solitude%E4%B8%BB%E9%A2%98/</id>
    <published>2025-03-16T15:15:03.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>再次十分感谢Butterfly主题和Solitude主题的作者和辅助开发的参与者</p><h3 id="相关网址"><a href="#相关网址" class="headerlink" title="相关网址"></a>相关网址</h3><p><strong>Butterfly主题：</strong><a href="">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><p><strong>张洪Heo：</strong><a href="https://blog.zhheo.com/">张洪Heo - 分享设计与科技生活</a></p><p><strong>Solitude主题：</strong></p><ul><li>伍拾柒博客：<a href="https://efu.me/"> 伍拾柒</a></li><li>主题文档教程：<a href="https://solitude.js.org/">Solitude - A Simple and Card UI Design theme for Hexo</a></li><li>主题仓库：<a href="https://github.com/everfu/hexo-theme-solitude">https://github.com/everfu/hexo-theme-solitude</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;再次十分感谢Butterfly主题和Solitude主题的作者和辅助开发的参与者&lt;/p&gt;
&lt;h3 id=&quot;相关网址&quot;&gt;&lt;a href=&quot;#相</summary>
      
    
    
    
    <category term="网站建设" scheme="https://sbsb.life/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="博客" scheme="https://sbsb.life/tags/%E5%8D%9A%E5%AE%A2/"/>
    
    <category term="主题" scheme="https://sbsb.life/tags/%E4%B8%BB%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>图片批量重命名</title>
    <link href="https://sbsb.life/2025/03/16/%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E5%91%BD%E5%90%8D/"/>
    <id>https://sbsb.life/2025/03/16/%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E5%91%BD%E5%90%8D/</id>
    <published>2025-03-16T12:15:03.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>前言</p><p>该程序为图片批量重命名</p><p>一、程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义文件夹路径</span></span><br><span class="line">folder_path = <span class="string">r&quot;E:\xxx\xxx&quot;</span>  <span class="comment"># 替换为你的文件夹路径</span></span><br><span class="line">output_folder = <span class="string">r&quot;E:\xxx\xxx&quot;</span>   <span class="comment"># 输出文件夹</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建输出文件夹</span></span><br><span class="line">os.makedirs(output_folder, exist_ok=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历文件夹中的图片</span></span><br><span class="line"><span class="keyword">for</span> index, filename <span class="keyword">in</span> <span class="built_in">enumerate</span>(os.listdir(folder_path)):</span><br><span class="line">    <span class="keyword">if</span> filename.lower().endswith((<span class="string">&#x27;.png&#x27;</span>, <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.jpeg&#x27;</span>, <span class="string">&#x27;.gif&#x27;</span>)):</span><br><span class="line">        <span class="comment"># 构建新文件名</span></span><br><span class="line">        new_name = <span class="string">f&#x27;image_<span class="subst">&#123;index + <span class="number">1</span>&#125;</span>.jpg&#x27;</span>  <span class="comment"># 修改为你想要的格式</span></span><br><span class="line">        <span class="comment"># 打开图片并保存到新文件夹</span></span><br><span class="line">        img = Image.<span class="built_in">open</span>(os.path.join(folder_path, filename))</span><br><span class="line">        img.save(os.path.join(output_folder, new_name))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;图片重命名完成！&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;该程序为图片批量重命名&lt;/p&gt;
&lt;p&gt;一、程序&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="https://sbsb.life/tags/Python/"/>
    
    <category term="图片" scheme="https://sbsb.life/tags/%E5%9B%BE%E7%89%87/"/>
    
    <category term="编程" scheme="https://sbsb.life/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>外接英特尔深度相机拍照与视频录制测试程序</title>
    <link href="https://sbsb.life/2025/03/15/%E5%A4%96%E6%8E%A5%E6%B7%B1%E5%BA%A6%E7%9B%B8%E6%9C%BA%E6%8B%8D%E7%85%A7%E5%92%8C%E5%BD%95%E5%88%B6%E8%A7%86%E9%A2%91/"/>
    <id>https://sbsb.life/2025/03/15/%E5%A4%96%E6%8E%A5%E6%B7%B1%E5%BA%A6%E7%9B%B8%E6%9C%BA%E6%8B%8D%E7%85%A7%E5%92%8C%E5%BD%95%E5%88%B6%E8%A7%86%E9%A2%91/</id>
    <published>2025-03-15T10:51:03.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>该程序为外接英特尔深度相机拍照测试和视频录制测试程序</p><h3 id="一、拍照程序"><a href="#一、拍照程序" class="headerlink" title="一、拍照程序"></a>一、拍照程序</h3><ol><li>按下 <code>s</code>键表示保存图片</li><li>按下 <code>q</code>键表示退出程序</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"></span><br><span class="line">cap = cv2.VideoCapture(<span class="number">1</span>, cv2.CAP_DSHOW)</span><br><span class="line">flag = cap.isOpened()</span><br><span class="line">index = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (flag):</span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    cv2.imshow(<span class="string">&quot;Capture_Paizhao&quot;</span>, frame)</span><br><span class="line">    k = cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span></span><br><span class="line">    <span class="keyword">if</span> k == <span class="built_in">ord</span>(<span class="string">&#x27;s&#x27;</span>):  <span class="comment"># 按下s键，进入下面的保存图片操作</span></span><br><span class="line">        cv2.imwrite(<span class="string">r&quot;D:\Desktop\calibration-images/&quot;</span> + <span class="built_in">str</span>(index) + <span class="string">&quot;.png&quot;</span>, frame)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;save&quot;</span> + <span class="built_in">str</span>(index) + <span class="string">&quot;.jpg successfuly!&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;-------------------------&quot;</span>)</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> k == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):  <span class="comment"># 按下q键，程序退出</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">cap.release() <span class="comment"># 释放摄像头</span></span><br><span class="line">cv2.destroyAllWindows()<span class="comment"># 释放并销毁窗口</span></span><br></pre></td></tr></table></figure><h3 id="二、录制视频程序"><a href="#二、录制视频程序" class="headerlink" title="二、录制视频程序"></a>二、录制视频程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开摄像头</span></span><br><span class="line">cap = cv2.VideoCapture(<span class="number">1</span>, cv2.CAP_DSHOW)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> cap.isOpened():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Error: Unable to access the camera.&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 视频保存设置</span></span><br><span class="line">fourcc = cv2.VideoWriter_fourcc(*<span class="string">&#x27;mp4v&#x27;</span>)  <span class="comment"># 使用 mp4v 编解码器</span></span><br><span class="line">fps = <span class="number">20.0</span>  <span class="comment"># 设置帧率</span></span><br><span class="line">width = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_WIDTH))  <span class="comment"># 获取摄像头宽度</span></span><br><span class="line">height = <span class="built_in">int</span>(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))  <span class="comment"># 获取摄像头高度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保输出目录存在</span></span><br><span class="line">output_dir = <span class="string">r&quot;D:\Desktop\calibration-videos&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(output_dir):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;Output directory does not exist: <span class="subst">&#123;output_dir&#125;</span>&quot;</span>)</span><br><span class="line">    os.makedirs(output_dir)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用时间戳生成唯一文件名</span></span><br><span class="line">timestamp = time.strftime(<span class="string">&quot;%Y%m%d_%H%M%S&quot;</span>)</span><br><span class="line">output_file = os.path.join(output_dir, <span class="string">f&quot;video_<span class="subst">&#123;timestamp&#125;</span>.mp4&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建视频写入器</span></span><br><span class="line">video_writer = cv2.VideoWriter(output_file, fourcc, fps, (width, height))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Recording started. The video will be saved as <span class="subst">&#123;output_file&#125;</span>. Press &#x27;q&#x27; to quit.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    ret, frame = cap.read()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> ret:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Error: Unable to read frame.&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示捕获的图像</span></span><br><span class="line">    cv2.imshow(<span class="string">&quot;Capture_Paizhao&quot;</span>, frame)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 写入视频文件</span></span><br><span class="line">    video_writer.write(frame)</span><br><span class="line"></span><br><span class="line">    k = cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span></span><br><span class="line">    <span class="keyword">if</span> k == <span class="built_in">ord</span>(<span class="string">&#x27;q&#x27;</span>):  <span class="comment"># 按下q键退出程序</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 释放资源</span></span><br><span class="line">cap.release()</span><br><span class="line">video_writer.release()</span><br><span class="line">cv2.destroyAllWindows()</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;该程序为外接英特尔深度相机拍照测试和视频录制测试程序&lt;/p&gt;
&lt;h3 id=&quot;一、拍照程序&quot;&gt;&lt;a href=&quot;#一、拍照程序&quot; class</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Python" scheme="https://sbsb.life/tags/Python/"/>
    
    <category term="深度相机" scheme="https://sbsb.life/tags/%E6%B7%B1%E5%BA%A6%E7%9B%B8%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>DeepSeek+RAGFlow构建本地知识库</title>
    <link href="https://sbsb.life/2025/03/05/DeepSeek-RAGFlow%E6%9E%84%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    <id>https://sbsb.life/2025/03/05/DeepSeek-RAGFlow%E6%9E%84%E5%BB%BA%E6%9C%AC%E5%9C%B0%E7%9F%A5%E8%AF%86%E5%BA%93/</id>
    <published>2025-03-05T13:13:28.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>在 AI 领域，RAG（Retrieval-Augmented Generation，检索增强生成）技术被广泛用于增强大语言模型（LLM）的知识能力。本文将介绍如何使用 <strong>DeepSeek</strong> 与 <strong>RAGFlow</strong> 搭建本地知识库，实现高效的知识检索与增强。</p><p>本教程基于以下设备进行测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">处理器：13th Gen Intel(R) Core(TM) i5-13400F 2.50 GHz</span><br><span class="line">内存：32.0 GB</span><br><span class="line">显卡：NVIDIA GTX 1070 Ti（8G）</span><br><span class="line">操作系统：windows11</span><br></pre></td></tr></table></figure><h3 id="一：下载Ollama"><a href="#一：下载Ollama" class="headerlink" title="一：下载Ollama"></a>一：下载Ollama</h3><p>Ollama 是一个开源的大型语言模型（LLM）平台，旨在让用户能够轻松地在本地运行、管理和与大型语言模型进行交互。</p><p>Ollama的<a href="https://github.com/ollama/ollama">Github仓库</a>里面也更加详细的介绍，接下来点击这个链接下载（<a href="https://ollama.com/download">https://ollama.com/download</a>）应用程序</p><p><img src="https://imagebed.sbsb.life/b286dc27dda4e5840694b65de9896eb.png"></p><p>安装完成后，按下 <code>Win+R</code>，输入 <code>cmd</code> 打开终端，并输入以下命令检查安装状态：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama</span><br></pre></td></tr></table></figure><p>如果出现如下输出，说明安装成功。</p><p><img src="https://imagebed.sbsb.life/aa90dba163035f732a3339bfbe045a3.png" alt="img"></p><h3 id="二：部署DeepSeek模型"><a href="#二：部署DeepSeek模型" class="headerlink" title="二：部署DeepSeek模型"></a>二：部署DeepSeek模型</h3><p>在ollama官网最上方的搜索框中输入 <code>deepseek-r1</code>，进入这个模型</p><p><img src="https://imagebed.sbsb.life/95a55f4ad65ec504c9bf7669394c874.png"></p><p>找到适合自己的模型并复制命令</p><p><img src="https://imagebed.sbsb.life/9274286b6cf3bf6fd66448c5f2943aa.png"></p><p>复制命令并在终端执行（以下以 <code>1.5B</code> 模型为例）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama pull deepseek-r1:1.5b</span><br></pre></td></tr></table></figure><p><img src="https://imagebed.sbsb.life/186240d50eb8be5604bf0da26d1ef68.png" alt="img"></p><p>运行以下命令检查是否安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama list</span><br></pre></td></tr></table></figure><p>显示 <code>deepseek-r1:1.5b</code>，说明已经安装成功。</p><p><img src="https://imagebed.sbsb.life/3f1e82ca09492324d52b39ce4852d04.png" alt="img"></p><p>模型硬件要求</p><table><thead><tr><th>版本</th><th>CPU</th><th>内存</th><th>显卡</th><th>存储</th></tr></thead><tbody><tr><td>DeepSeek-R1-1.5B</td><td>任意四核处理器</td><td>8GB</td><td>无需 GPU</td><td>12GB</td></tr><tr><td>DeepSeek-R1-7B</td><td>Ryzen 7 或更高</td><td>16GB</td><td>RTX 3060 (12GB) 或更高</td><td>80GB</td></tr><tr><td>DeepSeek-R1-14B</td><td>i9-13900K 或更高</td><td>32GB</td><td>RTX 4090 (24GB) 或更高</td><td>200GB</td></tr><tr><td>DeepSeek-R1-32B</td><td>Xeon 8核+128GB 或更高</td><td>64GB</td><td>2-4张 A100 80GB 或更高</td><td>320GB</td></tr><tr><td>DeepSeek-R1-70B</td><td>Xeon 8核+128GB 或更高</td><td>128GB</td><td>8+张 A100&#x2F;H100，显存 ≥80GB&#x2F;卡</td><td>500GB+</td></tr></tbody></table><h3 id="三：安装Docker-Desktop"><a href="#三：安装Docker-Desktop" class="headerlink" title="三：安装Docker Desktop"></a>三：安装Docker Desktop</h3><p>下载地址：<a href="https://www.docker.com/">https://www.docker.com/</a>，下载好后安装即可</p><ul><li>安装完成后，打开 Docker Desktop。</li><li>如果出现 <code>Docker Engine stopped</code> 错误，可能是缺少 WSL 支持。</li><li>运行以下命令安装 WSL：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --update</span><br></pre></td></tr></table></figure></li><li>重新启动 Docker Desktop。</li></ul><h3 id="四：安装RAGFlow"><a href="#四：安装RAGFlow" class="headerlink" title="四：安装RAGFlow"></a>四：安装RAGFlow</h3><p>设备要求如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CPU &gt;= 4 核</span><br><span class="line">RAM &gt;= 16 GB</span><br><span class="line">Disk &gt;= 50 GB</span><br><span class="line">Docker &gt;= 24.0.0 &amp; Docker Compose &gt;= v2.26.1</span><br></pre></td></tr></table></figure><p>RAGFlow的Github仓库地址：<a href="https://github.com/infiniflow/ragflow">https://github.com/infiniflow/ragflow</a>，下载即可，地址里面对RAGFlow的介绍很详细，可以阅读一遍</p><p><img src="https://imagebed.sbsb.life/d25200205d6aa1bef796cd72e592e51.png"></p><p>下载压缩包后并解压，找到 <code>ragflow-main/docker/.env</code>文件</p><ul><li>找到 <code>RAGFLOW_IMAGE=infiniflow/ragflow:v0.17.0-slim</code>并添加注释“#”</li><li>找到 <code>RAGFLOW_IMAGE=infiniflow/ragflow:v0.17.0</code>并删除注释“#”</li></ul><p><img src="https://imagebed.sbsb.life/de37863d934bcc4fc9342c084fe5f53.png"></p><p>在 <code>docker</code> 目录下打开 CMD，执行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker compose -f docker-compose.yml up -d</span><br></pre></td></tr></table></figure><p>出现以下图案则说明服务器启动成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    ____   ___    ______ ______ __</span><br><span class="line">   / __ \ /   |  / ____// ____// /____  _      __</span><br><span class="line">  / /_/ // /| | / / __ / /_   / // __ \| | /| / /</span><br><span class="line"> / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /</span><br><span class="line">/_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/</span><br><span class="line"></span><br><span class="line">* Running on all addresses (0.0.0.0)</span><br></pre></td></tr></table></figure><h3 id="五：配置环境变量"><a href="#五：配置环境变量" class="headerlink" title="五：配置环境变量"></a>五：配置环境变量</h3><p>进入电脑设置&gt;系统&gt;高级系统设置&gt;环境变量，在用户变量里新建如下两个变量</p><p><code>OLLAMA_MODELS</code>值的地址为存放ollama下载的模型</p><p><img src="https://imagebed.sbsb.life/b947f4be87e109fb463cac6b697e1d2.png"></p><h3 id="六：配置RAGFlow知识库"><a href="#六：配置RAGFlow知识库" class="headerlink" title="六：配置RAGFlow知识库"></a>六：配置RAGFlow知识库</h3><p>在浏览器输入 <code>localhost:80</code>，进入登录页面，首次注册默认是管理员账号。</p><p><img src="https://imagebed.sbsb.life/d5a3f94fc24d7407554e0b439d26dd1.png"></p><p>点击右上角头像&gt;模型提供商&gt;Ollama,然后输入配置信息</p><p>模型类型选 <code>chat</code>，模型名称填入刚刚下载的deepseek大模型 <code>deepseek-r1:1.5b</code>，url填写 <code>http://ip地址:11434</code></p><p><img src="https://imagebed.sbsb.life/76eb8642b19cb998c83c4a941c44320.png"></p><p>进入知识库页面，创建一个新的知识库。</p><p><img src="https://imagebed.sbsb.life/7efdfea154590478a0d36dfa8e7e307.png"></p><p>配置可以根据需求选择，然后上传自己的数据集</p><p><img src="https://imagebed.sbsb.life/ed100d9243898bf8630224401eef98a.png"></p><p>进入 聊天 &gt; 新建助理。</p><p><img src="https://imagebed.sbsb.life/11aa1c10eea6a79e34156556951dc88.png"></p><p>知识库选项必须选择刚刚创建的知识库，其他可以必填项按照提示填写即可</p><p><img src="https://imagebed.sbsb.life/8bf507865f4779ddbce1b5b8aff79da.png"></p><p>至此，你的本地知识库已经成功搭建，可以开始使用啦！🎉</p><p><img src="https://imagebed.sbsb.life/759e56d956204e632b3367622ffec4e.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;在 AI 领域，RAG（Retrieval-Augmented Generation，检索增强生成）技术被广泛用于增强大语言模型（LLM）的</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Deepseek" scheme="https://sbsb.life/tags/Deepseek/"/>
    
    <category term="RAGFlow" scheme="https://sbsb.life/tags/RAGFlow/"/>
    
    <category term="大模型" scheme="https://sbsb.life/tags/%E5%A4%A7%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>基于ST89C52单片机的八路竞赛抢答器系统</title>
    <link href="https://sbsb.life/2024/12/25/%E5%9F%BA%E4%BA%8EST89C52%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E5%85%AB%E8%B7%AF%E7%AB%9E%E8%B5%9B%E6%8A%A2%E7%AD%94%E5%99%A8%E7%B3%BB%E7%BB%9F/"/>
    <id>https://sbsb.life/2024/12/25/%E5%9F%BA%E4%BA%8EST89C52%E5%8D%95%E7%89%87%E6%9C%BA%E7%9A%84%E5%85%AB%E8%B7%AF%E7%AB%9E%E8%B5%9B%E6%8A%A2%E7%AD%94%E5%99%A8%E7%B3%BB%E7%BB%9F/</id>
    <published>2024-12-25T13:16:27.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：本设计提出了一个基于ST89C52单片机的八路竞赛抢答器系统，旨在为各类知识竞赛活动提供一个高效、准确的抢答解决方案。该系统具备八个独立的抢答输入通道，允许八组参赛队伍参与竞赛。系统核心采用ST89C52单片机，通过与外部电路的集成实现其功能。每个抢答按键连接到微控制器的输入端口，确保任一按键被按下时，信号能迅速传递至ST89C52单片机。内部程序根据预设逻辑快速响应，通过锁存电路锁定首个有效抢答，防止后续按键操作干扰结果。同时，系统能够迅速驱动数码管显示抢答成功的队伍信息倒计时时间，确保现场人员能够即时了解抢答结果。此外，系统还集成了蜂鸣器提示模块，以在抢答成功时发出提示音，增强现场的互动性和反馈效果。该抢答器系统的设计不仅提高了竞赛的公正性和透明度，还通过即时反馈提升了竞赛的观赏性和参与感。<br>关键词：单片机；ST89C52；抢答器</p><h3 id="一、设计任务、目的和要求"><a href="#一、设计任务、目的和要求" class="headerlink" title="一、设计任务、目的和要求"></a>一、设计任务、目的和要求</h3><p>本设计任务的核心目标是构建一个高效、可靠的八路竞赛抢答器系统，该系统基于微控制器技术，能够为八组参赛者提供独立的抢答输入通道。系统的主要功能包括实时监测抢答按键状态、准确识别首个有效抢答、通过显示模块实时展示结果以及发出声音提示以增强现场氛围。此外，系统设计还特别强调了抗干扰能力，确保在多个按键几乎同时被按下的情况下，只有第一次有效的抢答会被系统锁定和响应，从而避免后续的误判。本设计追求的不仅是技术的先进性和功能的完善性，还包括系统的稳定性、未来功能的可扩展性、操作的安全性以及整体成本的经济性。通过这些综合的设计要求，我们旨在提供一个不仅能满足当前竞赛需求，而且具备未来发展潜力的抢答器系统，以期在各类知识竞赛中发挥关键作用，提升竞赛的公正性、透明度和观赏性。</p><h3 id="二、总体方案设计"><a href="#二、总体方案设计" class="headerlink" title="二、总体方案设计"></a>二、总体方案设计</h3><p>该系统以ST89C52单片机为核心，构建了输入、输出、存储、显示和声音提示五大模块，旨在实现快速响应、准确显示和声音反馈等功能。如图1所示，硬件设计涵盖了微控制器的选型、输入通道的独立性、显示与声音模块的清晰度以及电源的稳定性。软件设计包括主控制程序、抢答检测算法、显示控制程序、声音控制程序和锁存电路控制程序的开发。此外，系统的抗干扰设计通过硬件和软件滤波确保了在复杂电磁环境下的稳定性。最后，系统测试通过单元测试、集成测试和现场测试验证了设计的有效性和可靠性，确保了系统能够满足实际竞赛活动中对抢答器的严格要求。</p><p><img src="https://imagebed.sbsb.life/94cf4a0c9f21f4c5676f69105a7a2fb.png"></p><h3 id="三、理论基础"><a href="#三、理论基础" class="headerlink" title="三、理论基础"></a>三、理论基础</h3><h4 id="1-微控制器编程理论"><a href="#1-微控制器编程理论" class="headerlink" title="1.微控制器编程理论"></a>1.微控制器编程理论</h4><p>主程序基于ST89C52微控制器平台，这是嵌入式系统设计中最常用的微控制器之一。ST89C52微控制器以其简单的结构、较低的成本和强大的处理能力而受到青睐。程序利用了ST89C52的特有指令集和寄存器配置，通过C语言编写，实现了对I&#x2F;O端口的直接操作和对中断、定时器等硬件资源的管理。</p><h4 id="2-输入-输出接口操作"><a href="#2-输入-输出接口操作" class="headerlink" title="2.输入&#x2F;输出接口操作"></a>2.输入&#x2F;输出接口操作</h4><p>程序中大量使用了对特定I&#x2F;O端口的位寻址操作，这是ST89C52微控制器的一个显著特点。通过定义’sbit’关键字，程序直接操作单个位，控制LED灯的状态和读取按键输入。这种直接的位操作是嵌入式系统设计中常用的技术，它允许开发者以最低的资源消耗实现对硬件的精确控制。</p><h4 id="3-存储技术"><a href="#3-存储技术" class="headerlink" title="3.存储技术"></a>3.存储技术</h4><p>程序中包含了对EEPROM的读写操作，这是非易失性存储器的一种，能够在断电后保持数据。EEPROM的使用基于其独特的特性，即可以在程序运行时修改存储的数据，这对于保存和恢复抢答器的配置（如倒计时时间）至关重要。</p><h4 id="4-定时器和延迟实现"><a href="#4-定时器和延迟实现" class="headerlink" title="4.定时器和延迟实现"></a>4.定时器和延迟实现</h4><p>程序中的’delayms’函数利用了软件延迟的技术来实现精确的时间控制。这种技术虽然简单，但在嵌入式系统中非常有效，尤其是在硬件定时器资源受限的情况下。此外，程序通过控制TR0寄存器来启动和停止ST89C52的硬件定时器，这是实现精确计时功能的关键。</p><h4 id="5-中断服务程序"><a href="#5-中断服务程序" class="headerlink" title="5. 中断服务程序"></a>5. 中断服务程序</h4><p>尽管主程序中没有直接的中断服务程序代码，但通过包含’INTERRUPT.h’头文件，程序预期将使用ST89C52的中断系统来响应外部事件，如按键输入。中断处理是嵌入式系统中实现实时响应的关键技术，它允许系统在执行常规任务的同时，快速响应外部事件。</p><h4 id="6-数码管显示控制"><a href="#6-数码管显示控制" class="headerlink" title="6. 数码管显示控制"></a>6. 数码管显示控制</h4><p>程序通过包含’SMG.h’头文件，预期将控制数码管显示。数码管作为七段显示设备，其控制涉及到数字逻辑和驱动技术，程序通过发送正确的信号到数码管的各个段，来显示特定的数字或字符。</p><h4 id="7-抢答逻辑处理"><a href="#7-抢答逻辑处理" class="headerlink" title="7. 抢答逻辑处理"></a>7. 抢答逻辑处理</h4><p>程序的核心在于抢答逻辑的处理，这涉及到状态机的概念。程序通过一系列状态变量（如’zhu_f’、’qiang_f’、’wan_f’）来跟踪当前的抢答状态，并根据这些状态来决定如何响应按键输入。状态机是控制理论中的一个基本概念，它在嵌入式系统中被广泛用于管理复杂的状态转换。</p><h3 id="四、测试与分析"><a href="#四、测试与分析" class="headerlink" title="四、测试与分析"></a>四、测试与分析</h3><h4 id="1-测试目标与方法"><a href="#1-测试目标与方法" class="headerlink" title="1. 测试目标与方法"></a>1. 测试目标与方法</h4><p>本节的测试目标是验证抢答器系统的功能完整性和性能指标。测试方法包括硬件功能测试、软件逻辑测试和系统集成测试，以确保每个组件和整体系统都能稳定运行。</p><h4 id="2-硬件与软件测试"><a href="#2-硬件与软件测试" class="headerlink" title="2. 硬件与软件测试"></a>2. 硬件与软件测试</h4><p>**硬件测试：**检查按键响应、LED显示和EEPROM数据保持，确保硬件组件正常工作。<br>**软件测试：**通过模拟操作验证功能逻辑，包括按键识别、显示更新和声音提示的准确性和及时性。</p><h4 id="3-性能评估"><a href="#3-性能评估" class="headerlink" title="3. 性能评估"></a>3. 性能评估</h4><p>性能评估关注系统的响应时间和稳定性。通过实际场景模拟，测量系统从接收抢答信号到显示结果的总时间，并监控长时间运行下的系统表现。</p><h4 id="4-结果与优化"><a href="#4-结果与优化" class="headerlink" title="4. 结果与优化"></a>4. 结果与优化</h4><p>测试结果将用于分析系统性能，并识别任何潜在问题。基于分析，提出必要的优化措施，如改进硬件布局、优化软件算法等，以提升系统的整体性能和用户体验。<br>通过这些测试与分析，我们能够确保抢答器系统在实际应用中的高效性和可靠性，并为后续改进提供依据。</p><h3 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h3><h4 id="1-系统设计与实现"><a href="#1-系统设计与实现" class="headerlink" title="1. 系统设计与实现"></a>1. 系统设计与实现</h4><p>本项目成功设计并实现了一个基于ST89C52微控制器的八路竞赛抢答器系统，满足了竞赛活动中快速准确判断抢答情况的需求。系统通过模块化编程和硬件抽象技术，实现了抢答信号的精确捕捉、实时结果显示和声音提示，同时利用EEPROM实现了数据的非易失性存储。这些功能的实现，确保了系统在实际应用中的可靠性和有效性。</p><h4 id="2-性能测试与稳定性"><a href="#2-性能测试与稳定性" class="headerlink" title="2. 性能测试与稳定性"></a>2. 性能测试与稳定性</h4><p>在性能测试阶段，系统展现了出色的响应速度和稳定性。软件消抖技术和硬件滤波电路的结合有效提升了系统的抗干扰能力，保证了在连续操作中的准确性和稳定性。测试结果表明，系统能够在毫秒级别内识别首个有效的抢答信号，并迅速将结果反馈给现场，满足了竞赛的实时性要求。</p><h4 id="3-后续工作与展望"><a href="#3-后续工作与展望" class="headerlink" title="3. 后续工作与展望"></a>3. 后续工作与展望</h4><p>尽管系统已经实现了设计目标并表现出良好的性能，但仍有改进和优化的空间。未来的工作可以集中在进一步优化用户界面、探索更高效的数据处理算法、增强系统的扩展性以适应更多参赛队伍，以及提高系统的智能化水平。我们相信，通过不断的测试和优化，该系统将在实际应用中发挥更大的作用。</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><h4 id="1-main-c"><a href="#1-main-c" class="headerlink" title="1.main.c"></a>1.main.c</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;SMG.h&gt;</span>  <span class="comment">//数码管显示相关的函数和定义</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;EEPROM.h&gt;</span>  <span class="comment">//包含EEPROM读写操作的函数和定义</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;INTERRUPT.h&gt;</span>  <span class="comment">//包含中断服务程序的函数和定义</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sbit key_zhu=P2^<span class="number">2</span>;  </span><br><span class="line">sbit key_jia=P2^<span class="number">1</span>; </span><br><span class="line">sbit key_jian=P2^<span class="number">0</span>;  </span><br><span class="line"></span><br><span class="line">sbit key_1=P1^<span class="number">1</span>; </span><br><span class="line">sbit key_2=P1^<span class="number">3</span>;</span><br><span class="line">sbit key_3=P1^<span class="number">5</span>;</span><br><span class="line">sbit key_4=P1^<span class="number">7</span>;</span><br><span class="line">sbit key_5=P3^<span class="number">1</span>;</span><br><span class="line">sbit key_6=P3^<span class="number">3</span>;</span><br><span class="line">sbit key_7=P3^<span class="number">5</span>;</span><br><span class="line">sbit key_8=P3^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">sbit led_1=P1^<span class="number">0</span>;  </span><br><span class="line">sbit led_2=P1^<span class="number">2</span>;</span><br><span class="line">sbit led_3=P1^<span class="number">4</span>;</span><br><span class="line">sbit led_4=P1^<span class="number">6</span>;</span><br><span class="line">sbit led_5=P3^<span class="number">0</span>;</span><br><span class="line">sbit led_6=P3^<span class="number">2</span>;</span><br><span class="line">sbit led_7=P3^<span class="number">4</span>;</span><br><span class="line">sbit led_8=P3^<span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">uchar zhu_f=<span class="number">0</span>;   </span><br><span class="line">uchar qiang_f=<span class="number">0</span>;  </span><br><span class="line">uchar wan_f=<span class="number">0</span>;  </span><br><span class="line">uchar time=<span class="number">30</span>;   </span><br><span class="line">uchar T0_num;   </span><br><span class="line">uchar number;   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">delayms</span><span class="params">(uint ms)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> i=<span class="number">100</span>,j;</span><br><span class="line"><span class="keyword">for</span>(;ms;ms--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(--i)</span><br><span class="line">&#123;</span><br><span class="line">j=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>(--j);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bajing</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">buzz=<span class="number">0</span>;   </span><br><span class="line">delayms(<span class="number">10</span>);</span><br><span class="line">buzz=<span class="number">1</span>;   </span><br><span class="line">delayms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">uchar <span class="title function_">qianda</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">uchar temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(key_1==<span class="number">0</span>)  </span><br><span class="line">temp=<span class="number">1</span>;  </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_2==<span class="number">0</span>)</span><br><span class="line">temp=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_3==<span class="number">0</span>)</span><br><span class="line">temp=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_4==<span class="number">0</span>)</span><br><span class="line">temp=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_5==<span class="number">0</span>)</span><br><span class="line">temp=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_6==<span class="number">0</span>)</span><br><span class="line">temp=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_7==<span class="number">0</span>)</span><br><span class="line">temp=<span class="number">7</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_8==<span class="number">0</span>)</span><br><span class="line">temp=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_kongzhi</span><span class="params">(uchar num,bit k,bit mode)</span>  <span class="comment">//num是led编号，k=0灯亮，k=1灯灭，mode是否所有灯熄灭</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mode==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">led_1=<span class="number">1</span>;   </span><br><span class="line">led_2=<span class="number">1</span>;</span><br><span class="line">led_3=<span class="number">1</span>;</span><br><span class="line">led_4=<span class="number">1</span>;</span><br><span class="line">led_5=<span class="number">1</span>;</span><br><span class="line">led_6=<span class="number">1</span>;</span><br><span class="line">led_7=<span class="number">1</span>;</span><br><span class="line">led_8=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (num) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:led_1=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:led_2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:led_3=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:led_4=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:led_5=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:led_6=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:led_7=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:led_8=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span> (num)  </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:led_1=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:led_2=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:led_3=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:led_4=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:led_5=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:led_6=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:led_7=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:led_8=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">scan</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">uchar qiangda_num=<span class="number">0</span>;  <span class="comment">//用于存储抢答按钮按下时的编号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(key_zhu==<span class="number">0</span>)   <span class="comment">// key_zhu 是否被按下  </span></span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">7</span>);   </span><br><span class="line"><span class="keyword">if</span>(key_zhu==<span class="number">0</span>&amp;&amp;zhu_f!=<span class="number">2</span>&amp;&amp;qiang_f==<span class="number">0</span>&amp;&amp;wan_f==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">zhu_f++;   </span><br><span class="line"><span class="keyword">if</span>(zhu_f==<span class="number">2</span>)   </span><br><span class="line">&#123;</span><br><span class="line">TR0=<span class="number">1</span>;   </span><br><span class="line">wan_f=<span class="number">0</span>;   </span><br><span class="line">bajing();  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_zhu==<span class="number">0</span>&amp;&amp;qiang_f==<span class="number">1</span>)   </span><br><span class="line">&#123;</span><br><span class="line">buzz=<span class="number">1</span>; </span><br><span class="line">qiang_f=<span class="number">0</span>; </span><br><span class="line">number=<span class="number">0</span>; </span><br><span class="line">time=EEPROM_read(<span class="number">0x2000</span>);</span><br><span class="line">led_kongzhi(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">if</span>(key_zhu==<span class="number">0</span>&amp;&amp;wan_f==<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">buzz=<span class="number">1</span>; </span><br><span class="line">wan_f=<span class="number">0</span>; </span><br><span class="line">number=<span class="number">0</span>; </span><br><span class="line">time=EEPROM_read(<span class="number">0x2000</span>);</span><br><span class="line">led_kongzhi(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(key_zhu==<span class="number">0</span>&amp;&amp;zhu_f==<span class="number">2</span>) </span><br><span class="line">&#123;</span><br><span class="line">TR0=<span class="number">0</span>; </span><br><span class="line">zhu_f=<span class="number">1</span>; </span><br><span class="line">bajing(); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!key_zhu);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(key_jia==<span class="number">0</span>&amp;&amp;zhu_f==<span class="number">1</span>&amp;&amp;qiang_f==<span class="number">0</span>) <span class="comment">//增加时间键（key_jia）扫描</span></span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">7</span>);<span class="comment">//如果 key_jia 被按下，并且 zhu_f == 1、qiang_f == 0，则增加 time 的值，并更新EEPROM和显示。 </span></span><br><span class="line"><span class="keyword">if</span>(key_jia==<span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(time&lt;<span class="number">99</span>)          </span><br><span class="line">time++; </span><br><span class="line">EEPROM_delete(<span class="number">0x2000</span>);</span><br><span class="line">EEPROM_write(<span class="number">0x2000</span>,time); </span><br><span class="line">display(time/<span class="number">10</span>,time%<span class="number">10</span>,<span class="number">10</span>,<span class="number">0</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(key_jian==<span class="number">0</span>&amp;&amp;zhu_f==<span class="number">1</span>&amp;&amp;qiang_f==<span class="number">0</span>)   <span class="comment">//减少时间键（key_jian）扫描：  </span></span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">7</span>);<span class="comment">//如果 key_jian 被按下，并且 zhu_f == 1、qiang_f == 0，则减少 time 的值，并更新EEPROM和显示。</span></span><br><span class="line"><span class="keyword">if</span>(key_jian==<span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(time!=<span class="number">0</span>)  </span><br><span class="line">time--;        </span><br><span class="line">EEPROM_delete(<span class="number">0x2000</span>); </span><br><span class="line">EEPROM_write(<span class="number">0x2000</span>,time); </span><br><span class="line">display(time/<span class="number">10</span>,time%<span class="number">10</span>,<span class="number">10</span>,<span class="number">0</span>); </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">qiangda_num=qianda();</span><br><span class="line"><span class="keyword">if</span>(qiangda_num!=<span class="number">0</span>)  <span class="comment">//抢答键（qianda）扫描：                      </span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">if</span>(zhu_f!=<span class="number">2</span>&amp;&amp;qiang_f==<span class="number">0</span>&amp;&amp;wan_f==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">zhu_f=<span class="number">1</span>;</span><br><span class="line">buzz=<span class="number">0</span>;  </span><br><span class="line">qiang_f=<span class="number">1</span>;  </span><br><span class="line">number=qiangda_num;</span><br><span class="line">led_kongzhi(number,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(zhu_f==<span class="number">2</span>&amp;&amp;wan_f==<span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line">wan_f=<span class="number">1</span>; </span><br><span class="line">zhu_f=<span class="number">0</span>; </span><br><span class="line">TR0=<span class="number">0</span>; </span><br><span class="line">number=qiangda_num;</span><br><span class="line">led_kongzhi(number,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">bajing(); </span><br><span class="line">&#125;</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">uchar i=<span class="number">0</span>;   </span><br><span class="line">T0_init();<span class="comment">//初始化定时器0 </span></span><br><span class="line"><span class="keyword">if</span>(key_jian==<span class="number">0</span>)     <span class="comment">//检查按键（减键是否按下）</span></span><br><span class="line">&#123;</span><br><span class="line">delayms(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(key_jian==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">EEPROM_delete(<span class="number">0x2000</span>); </span><br><span class="line">EEPROM_write(<span class="number">0x2000</span>,<span class="number">30</span>);  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">time=EEPROM_read(<span class="number">0x2000</span>); </span><br><span class="line">led_kongzhi(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);  <span class="comment">//使所以灯熄灭</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">scan();<span class="comment">//不断检查按键的状态 </span></span><br><span class="line"><span class="keyword">if</span>(zhu_f==<span class="number">0</span>&amp;&amp;wan_f==<span class="number">0</span>) </span><br><span class="line">display(<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>); <span class="comment">//显示函数</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(zhu_f==<span class="number">0</span>&amp;&amp;wan_f==<span class="number">1</span>) </span><br><span class="line">display(time/<span class="number">10</span>,time%<span class="number">10</span>,<span class="number">10</span>,number);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span>(zhu_f!=<span class="number">0</span>) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(qiang_f==<span class="number">1</span>)   </span><br><span class="line">display(<span class="number">11</span>,<span class="number">11</span>,<span class="number">10</span>,number); </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">display(time/<span class="number">10</span>,time%<span class="number">10</span>,<span class="number">10</span>,number);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-EEPROM-h"><a href="#2-EEPROM-h" class="headerlink" title="2.EEPROM.h"></a>2.EEPROM.h</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************</span></span><br><span class="line"><span class="comment">                      单片机内部EEPROM头文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">实现功能：单片机内部EEPROM的控制</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">补充说明：</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _EEPROM_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _EEPROM_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;intrins.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************STC内部EEPROM控制寄存器定义*******************/</span></span><br><span class="line">sfr ISP_DATA  = <span class="number">0xe2</span>;</span><br><span class="line">sfr ISP_ADDRH = <span class="number">0xe3</span>;</span><br><span class="line">sfr ISP_ADDRL = <span class="number">0xe4</span>;</span><br><span class="line">sfr ISP_CMD   = <span class="number">0xe5</span>;</span><br><span class="line">sfr ISP_TRIG  = <span class="number">0xe6</span>;</span><br><span class="line">sfr ISP_CONTR = <span class="number">0xe7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************STC内部EEPROM函数定义***********************/</span></span><br><span class="line"><span class="type">void</span>  <span class="title function_">EEPROM_delete</span><span class="params">(uint addr)</span>;<span class="comment">//擦除一个扇区</span></span><br><span class="line"><span class="type">void</span>  <span class="title function_">EEPROM_write</span><span class="params">(uint addr,uchar dat)</span>;<span class="comment">//往addr地址写入数据</span></span><br><span class="line">uchar <span class="title function_">EEPROM_read</span><span class="params">(uint addr)</span>;<span class="comment">//向addr地址读取一个数据</span></span><br><span class="line"><span class="type">void</span>  <span class="title function_">ISP_off</span><span class="params">()</span>;<span class="comment">//关闭ISP操作</span></span><br><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">函数：擦除某一扇区（每个扇区512字节）</span></span><br><span class="line"><span class="comment">入口：addr = 某一扇区首地址  </span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EEPROM_delete</span><span class="params">(uint addr)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 打开 IAP 功能(ISP_CONTR.7)=1:允许编程改变Flash, 设置Flash操作等待时间</span></span><br><span class="line"><span class="comment">// 0x83(晶振&lt;5M)   0x82(晶振&lt;10M)   0x81(晶振&lt;20M)   0x80(晶振&lt;40M)</span></span><br><span class="line">    ISP_CONTR = <span class="number">0x81</span>;  </span><br><span class="line">    ISP_CMD   = <span class="number">0x03</span>;  <span class="comment">// 用户可以对&quot;Data Flash/EEPROM区&quot;进行扇区擦除</span></span><br><span class="line">    ISP_ADDRL = addr;         <span class="comment">// ISP/IAP操作时的地址寄存器低八位，</span></span><br><span class="line">    ISP_ADDRH = addr&gt;&gt;<span class="number">8</span>;      <span class="comment">// ISP/IAP操作时的地址寄存器高八位。 </span></span><br><span class="line">EA =<span class="number">0</span>;   </span><br><span class="line">    ISP_TRIG = <span class="number">0x46</span>;          <span class="comment">// 在ISPEN(ISP_CONTR.7)=1时,对ISP_TRIG先写入46h，</span></span><br><span class="line">    ISP_TRIG = <span class="number">0xB9</span>;          <span class="comment">// 再写入B9h,ISP/IAP命令才会生效。</span></span><br><span class="line">    _nop_();</span><br><span class="line">EA =<span class="number">1</span>;</span><br><span class="line">    ISP_off();  <span class="comment">// 关闭ISP/IAP</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">函数：写一字节</span></span><br><span class="line"><span class="comment">入口：addr = 扇区单元地址 , dat = 待写入数据</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EEPROM_write</span><span class="params">(uint addr,uchar dat)</span></span><br><span class="line">&#123;</span><br><span class="line">    ISP_CONTR = <span class="number">0x81</span>;  </span><br><span class="line">    ISP_CMD   = <span class="number">0x02</span>;      <span class="comment">// 用户可以对&quot;Data Flash/EEPROM区&quot;进行字节编程</span></span><br><span class="line">    ISP_ADDRL = addr;  </span><br><span class="line">    ISP_ADDRH = addr&gt;&gt;<span class="number">8</span>;  </span><br><span class="line">    ISP_DATA  = dat;          <span class="comment">// 数据进ISP_DATA</span></span><br><span class="line">    EA = <span class="number">0</span>;</span><br><span class="line">    ISP_TRIG = <span class="number">0x46</span>;    </span><br><span class="line">    ISP_TRIG = <span class="number">0xB9</span>;    </span><br><span class="line">    _nop_();</span><br><span class="line">EA =<span class="number">1</span>;</span><br><span class="line">    ISP_off();  <span class="comment">// 关闭ISP/IAP</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">函数：读一字节</span></span><br><span class="line"><span class="comment">入口：addr = 扇区单元地址</span></span><br><span class="line"><span class="comment">出口：dat  = 读出的数据</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line">uchar <span class="title function_">EEPROM_read</span><span class="params">(uint addr)</span></span><br><span class="line">&#123;   </span><br><span class="line">    uchar dat;</span><br><span class="line"></span><br><span class="line">ISP_CONTR = <span class="number">0x81</span>;  </span><br><span class="line">    ISP_CMD   = <span class="number">0x01</span>;         <span class="comment">// 用户可以对&quot;Data Flash/EEPROM区&quot;进行字节读</span></span><br><span class="line">    ISP_ADDRL = addr;   </span><br><span class="line">    ISP_ADDRH = addr&gt;&gt;<span class="number">8</span>;  </span><br><span class="line">    EA = <span class="number">0</span>;</span><br><span class="line">    ISP_TRIG = <span class="number">0x46</span>;    </span><br><span class="line">    ISP_TRIG = <span class="number">0xB9</span>;    </span><br><span class="line">    _nop_();</span><br><span class="line">    dat = ISP_DATA;  <span class="comment">// 取出数据</span></span><br><span class="line">ISP_off();  <span class="comment">// 关闭ISP/IAP </span></span><br><span class="line">EA =<span class="number">1</span>;    </span><br><span class="line"><span class="keyword">return</span> dat;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************************************************************</span></span><br><span class="line"><span class="comment">函数：关闭ISP/IAP操作</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ISP_off</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ISP_CONTR = <span class="number">0</span>;            <span class="comment">// 关闭IAP功能</span></span><br><span class="line">    ISP_CMD   = <span class="number">0</span>;            <span class="comment">// 待机模式，无ISP操作</span></span><br><span class="line">    ISP_TRIG  = <span class="number">0</span>;            <span class="comment">// 关闭IAP功能, 清与ISP有关的特殊功能寄存器 </span></span><br><span class="line">ISP_ADDRH = <span class="number">0</span>;</span><br><span class="line">ISP_ADDRL = <span class="number">0</span>;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********************************************************************************************</span></span><br><span class="line"><span class="comment">STC89C52RC内部EEPROM详细地址表：</span></span><br><span class="line"><span class="comment">第一扇区               第二扇区                第三扇区                第四扇区</span></span><br><span class="line"><span class="comment">起始地址  结束地址     起始地址   结束地址     起始地址   结束地址     起始地址    结束地址</span></span><br><span class="line"><span class="comment">2000h     21FFh        2200h      23FFh        2400h      25FFh        2600h       27FFH</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">第五扇区               第六扇区                第七扇区                第八扇区</span></span><br><span class="line"><span class="comment">起始地址  结束地址     起始地址   结束地址     起始地址   结束地址     起始地址    结束地址</span></span><br><span class="line"><span class="comment">2800h     29FFh        2A00h      2BFFh        2C00h      2DFFh        2E00h        2FFFh </span></span><br><span class="line"><span class="comment">**********************************************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>3.INTERRUPT.H</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************</span></span><br><span class="line"><span class="comment">                      单片机中断头文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">实现功能：单片机中断的控制控制</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">补充说明：</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _INTERRUPT_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _INTERRUPT_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************引脚定义************************/</span></span><br><span class="line">sbit buzz=P2^<span class="number">3</span>; <span class="comment">///蜂鸣器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********************变量定义************************/</span></span><br><span class="line"><span class="keyword">extern</span> uchar zhu_f; <span class="comment">//外部变量</span></span><br><span class="line"><span class="keyword">extern</span> uchar wan_f;</span><br><span class="line"><span class="keyword">extern</span> uchar time;</span><br><span class="line">uchar T0_num;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment">函数名称:void T0_init()</span></span><br><span class="line"><span class="comment">函数作用:定时器0初始化函数</span></span><br><span class="line"><span class="comment">参数说明:</span></span><br><span class="line"><span class="comment">*********************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">T0_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">EA=<span class="number">1</span>;                  <span class="comment">//开总中断</span></span><br><span class="line">ET0=<span class="number">1</span>;                 <span class="comment">//定时器T0中断允许   </span></span><br><span class="line">TMOD=<span class="number">0x01</span>;             <span class="comment">//使用定时器T0的模式1</span></span><br><span class="line">TH0=(<span class="number">65536</span><span class="number">-50000</span>)/<span class="number">256</span>; <span class="comment">//定时器T0的高8位赋初值</span></span><br><span class="line">TL0=(<span class="number">65536</span><span class="number">-50000</span>)%<span class="number">256</span>; <span class="comment">//定时器T0的低8位赋初值</span></span><br><span class="line">TR0=<span class="number">0</span>;   <span class="comment">//关闭定时器</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*********************************************************</span></span><br><span class="line"><span class="comment">函数名称:void T0_interrupt(void) interrupt 1 using 0</span></span><br><span class="line"><span class="comment">函数作用:定时器0中断处理函数</span></span><br><span class="line"><span class="comment">参数说明:</span></span><br><span class="line"><span class="comment">*********************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">T0_interrupt</span><span class="params">(<span class="type">void</span>)</span> interrupt 1 using 0</span><br><span class="line">&#123;  </span><br><span class="line">TH0=(<span class="number">65536</span><span class="number">-50000</span>)/<span class="number">256</span>; <span class="comment">//定时器T0的高8位重新赋初值</span></span><br><span class="line">TL0=(<span class="number">65536</span><span class="number">-50000</span>)%<span class="number">256</span>; <span class="comment">//定时器T0的低8位重新赋初值</span></span><br><span class="line"></span><br><span class="line">T0_num++;   <span class="comment">//中断次数+1</span></span><br><span class="line"><span class="keyword">if</span>(time&lt;=<span class="number">5</span>)   <span class="comment">//比赛最后5S，蜂鸣器发出滴滴鸣叫声</span></span><br><span class="line">buzz=~buzz;</span><br><span class="line"><span class="keyword">if</span>(T0_num==<span class="number">20</span>)   <span class="comment">//中断20次，表示20*50ms=1S</span></span><br><span class="line">&#123;</span><br><span class="line">T0_num=<span class="number">0</span>;   <span class="comment">//重置中断次数</span></span><br><span class="line">time--;   <span class="comment">//比赛时间-1S</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(time==<span class="number">0</span>)   <span class="comment">//比赛时间倒计时为0S时</span></span><br><span class="line">&#123;</span><br><span class="line">TR0=<span class="number">0</span>;   <span class="comment">//关闭定时器</span></span><br><span class="line">zhu_f=<span class="number">0</span>;   <span class="comment">//重新回到开始状态</span></span><br><span class="line">buzz=<span class="number">1</span>;   <span class="comment">//关闭蜂鸣器</span></span><br><span class="line">wan_f=<span class="number">1</span>;   <span class="comment">//标记本次抢答完成</span></span><br><span class="line">&#125;          </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><h4 id="4-SMG-h"><a href="#4-SMG-h" class="headerlink" title="4.SMG.h"></a>4.SMG.h</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*************************************************************</span></span><br><span class="line"><span class="comment">                      数码管头文件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">实现功能：数码管的控制</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">补充说明：</span></span><br><span class="line"><span class="comment">***************************************************************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> _SMG_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _SMG_H_</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;reg52.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uchar unsigned char</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> uint unsigned int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************数码管引脚定义*******************/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> duan P0</span></span><br><span class="line">sbit w1=P2^<span class="number">4</span>;</span><br><span class="line">sbit w2=P2^<span class="number">5</span>;</span><br><span class="line">sbit w3=P2^<span class="number">6</span>;</span><br><span class="line">sbit w4=P2^<span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*****************数码管变量定义*******************/</span></span><br><span class="line">uchar code wei1[]=&#123;<span class="number">0xa0</span>,<span class="number">0xbb</span>,<span class="number">0x62</span>,<span class="number">0x2a</span>,<span class="number">0x39</span>,<span class="number">0x2c</span>,<span class="number">0x24</span>,<span class="number">0xba</span>,<span class="number">0x20</span>,<span class="number">0x28</span>,<span class="number">0x7f</span>,<span class="number">0x74</span>&#125;;<span class="comment">//数码管显示段码</span></span><br><span class="line">uchar code wei2[]=&#123;<span class="number">0x80</span>,<span class="number">0x9b</span>,<span class="number">0x42</span>,<span class="number">0x0a</span>,<span class="number">0x19</span>,<span class="number">0x0c</span>,<span class="number">0x04</span>,<span class="number">0x9a</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x5f</span>,<span class="number">0x74</span>&#125;;<span class="comment">//数码管显示段码，带小数点</span></span><br><span class="line"><span class="comment">/*****************数码管函数定义*********************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> num)</span>;   <span class="comment">//延时函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar a,uchar b,uchar c,uchar d)</span>; <span class="comment">//显示函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************</span></span><br><span class="line"><span class="comment">函数名称:void Delay(unsigned int num)</span></span><br><span class="line"><span class="comment">函数作用:US延时函数</span></span><br><span class="line"><span class="comment">参数说明:</span></span><br><span class="line"><span class="comment">********************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay</span><span class="params">(<span class="type">unsigned</span> <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">while</span>( --num ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************************************************</span></span><br><span class="line"><span class="comment">函数名称:void display(uchar a,uchar b,uchar c,uchar d)</span></span><br><span class="line"><span class="comment">函数作用:数码管显示函数</span></span><br><span class="line"><span class="comment">参数说明:a：百位，b：十位，c：个位，d：十分位</span></span><br><span class="line"><span class="comment">********************************************************/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">display</span><span class="params">(uchar a,uchar b,uchar c,uchar d)</span></span><br><span class="line">&#123;</span><br><span class="line">duan=wei1[a];<span class="comment">//不带小数点</span></span><br><span class="line">w1=<span class="number">0</span>;</span><br><span class="line">Delay(<span class="number">300</span>);</span><br><span class="line">w1=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"> duan=wei1[b];<span class="comment">//不带小数点</span></span><br><span class="line">w2=<span class="number">0</span>;</span><br><span class="line">Delay(<span class="number">300</span>);</span><br><span class="line">w2=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"> duan=wei1[c];<span class="comment">//带小数点</span></span><br><span class="line">w3=<span class="number">0</span>;</span><br><span class="line">Delay(<span class="number">300</span>);</span><br><span class="line">w3=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">duan=wei1[d];<span class="comment">//不带小数点</span></span><br><span class="line">w4=<span class="number">0</span>;</span><br><span class="line">Delay(<span class="number">300</span>);</span><br><span class="line">w4=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;摘要：本设计提出了一个基于ST89C52单片机的八路竞赛抢答器系统，旨在为各类知识竞赛活动提供一个高效、准确的抢答解决方案。该系统具备八个独立的抢答输入通道，允许八组参赛队伍参与竞赛。系统核心采用ST89C52单片机，通过与外部电路的集成实现其功能。每个抢答按键连接到微控制</summary>
      
    
    
    
    <category term="其他" scheme="https://sbsb.life/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="课程作业" scheme="https://sbsb.life/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="单片机" scheme="https://sbsb.life/tags/%E5%8D%95%E7%89%87%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>深度学习训练数据集标注格式转换：txt转xml</title>
    <link href="https://sbsb.life/2024/12/22/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%87%E6%B3%A8%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2%EF%BC%9Atxt%E8%BD%ACxml/"/>
    <id>https://sbsb.life/2024/12/22/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E8%AE%AD%E7%BB%83%E6%95%B0%E6%8D%AE%E9%9B%86%E6%A0%87%E6%B3%A8%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2%EF%BC%9Atxt%E8%BD%ACxml/</id>
    <published>2024-12-22T08:54:01.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>您在深度学习领域的探索已经持续了半年时间，最初您选择了YOLOv8模型作为起点。在开始阶段，您亲自采集了数千张图像，并制作了一个数据集，所有的标注都以txt格式保存。随着学习的深入，您萌生了对比YOLOv8与SSD、RCNN等其他模型性能的想法。然而，SSD和RCNN模型需要的是xml格式的标注文件。</p><p>面对这一挑战，您意识到重新标注所有图像不仅耗时耗力，而且新的标注很难与原有标注完全一致，这将影响到实验结果的可比性和严谨性。因此，您决定将原有的txt标注文件转换为xml格式，以保持数据的一致性，从而确保实验的准确性和可靠性。</p><p>通过这样的转换，您不仅能够充分利用已有的数据集，还能在保持数据一致性的前提下，对不同模型的性能进行公正的比较。这无疑是一个既高效又严谨的解决方案。</p><h3 id="Python程序实现"><a href="#Python程序实现" class="headerlink" title="Python程序实现"></a>Python程序实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> xml.dom.minidom <span class="keyword">import</span> Document</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> tqdm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># def makexml(txtPath, xmlPath, picPath):  # txt所在文件夹路径，xml文件保存路径，图片所在文件夹路径</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makexml</span>(<span class="params">picPath, txtPath, xmlPath, datasetName</span>):  <span class="comment"># txt所在文件夹路径，xml文件保存路径，图片所在文件夹路径</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;此函数用于将yolo格式txt标注文件转换为voc格式xml标注文件</span></span><br><span class="line"><span class="string">    在自己的标注图片文件夹下建三个子文件夹，分别命名为picture、txt、xml</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    dic = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="string">&quot;Pickable&quot;</span>&#125;</span><br><span class="line">    files = os.listdir(txtPath)</span><br><span class="line">    <span class="keyword">for</span> i, name <span class="keyword">in</span> <span class="built_in">enumerate</span>(tqdm(files)):</span><br><span class="line">        <span class="keyword">if</span> name == <span class="string">&#x27;classes.txt&#x27;</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        xmlBuilder = Document()</span><br><span class="line">        annotation = xmlBuilder.createElement(<span class="string">&quot;annotation&quot;</span>)  <span class="comment"># 创建annotation标签</span></span><br><span class="line">        xmlBuilder.appendChild(annotation)</span><br><span class="line">        txtFile = <span class="built_in">open</span>(os.path.join(txtPath, name))</span><br><span class="line">        txtList = txtFile.readlines()</span><br><span class="line">        img = cv2.imread(os.path.join(picPath, name.replace(<span class="string">&#x27;txt&#x27;</span>, <span class="string">&#x27;jpg&#x27;</span>)))</span><br><span class="line">        Pheight, Pwidth, Pdepth = img.shape</span><br><span class="line"></span><br><span class="line">        folder = xmlBuilder.createElement(<span class="string">&quot;folder&quot;</span>)  <span class="comment"># folder标签</span></span><br><span class="line">        foldercontent = xmlBuilder.createTextNode(datasetName)</span><br><span class="line">        folder.appendChild(foldercontent)</span><br><span class="line">        annotation.appendChild(folder)  <span class="comment"># folder标签结束</span></span><br><span class="line"></span><br><span class="line">        filename = xmlBuilder.createElement(<span class="string">&quot;filename&quot;</span>)  <span class="comment"># filename标签</span></span><br><span class="line">        filenamecontent = xmlBuilder.createTextNode(name[<span class="number">0</span>:-<span class="number">4</span>] + <span class="string">&quot;.jpg&quot;</span>)</span><br><span class="line">        filename.appendChild(filenamecontent)</span><br><span class="line">        annotation.appendChild(filename)  <span class="comment"># filename标签结束</span></span><br><span class="line"></span><br><span class="line">        size = xmlBuilder.createElement(<span class="string">&quot;size&quot;</span>)  <span class="comment"># size标签</span></span><br><span class="line">        width = xmlBuilder.createElement(<span class="string">&quot;width&quot;</span>)  <span class="comment"># size子标签width</span></span><br><span class="line">        widthcontent = xmlBuilder.createTextNode(<span class="built_in">str</span>(Pwidth))</span><br><span class="line">        width.appendChild(widthcontent)</span><br><span class="line">        size.appendChild(width)  <span class="comment"># size子标签width结束</span></span><br><span class="line"></span><br><span class="line">        height = xmlBuilder.createElement(<span class="string">&quot;height&quot;</span>)  <span class="comment"># size子标签height</span></span><br><span class="line">        heightcontent = xmlBuilder.createTextNode(<span class="built_in">str</span>(Pheight))</span><br><span class="line">        height.appendChild(heightcontent)</span><br><span class="line">        size.appendChild(height)  <span class="comment"># size子标签height结束</span></span><br><span class="line"></span><br><span class="line">        depth = xmlBuilder.createElement(<span class="string">&quot;depth&quot;</span>)  <span class="comment"># size子标签depth</span></span><br><span class="line">        depthcontent = xmlBuilder.createTextNode(<span class="built_in">str</span>(Pdepth))</span><br><span class="line">        depth.appendChild(depthcontent)</span><br><span class="line">        size.appendChild(depth)  <span class="comment"># size子标签depth结束</span></span><br><span class="line"></span><br><span class="line">        annotation.appendChild(size)  <span class="comment"># size标签结束</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> txtList:</span><br><span class="line">            oneline = j.strip().split(<span class="string">&quot; &quot;</span>)</span><br><span class="line">            <span class="built_in">object</span> = xmlBuilder.createElement(<span class="string">&quot;object&quot;</span>)  <span class="comment"># object 标签</span></span><br><span class="line">            picname = xmlBuilder.createElement(<span class="string">&quot;name&quot;</span>)  <span class="comment"># name标签</span></span><br><span class="line">            namecontent = xmlBuilder.createTextNode(dic[oneline[<span class="number">0</span>]])</span><br><span class="line">            picname.appendChild(namecontent)</span><br><span class="line">            <span class="built_in">object</span>.appendChild(picname)  <span class="comment"># name标签结束</span></span><br><span class="line"></span><br><span class="line">            pose = xmlBuilder.createElement(<span class="string">&quot;pose&quot;</span>)  <span class="comment"># pose标签</span></span><br><span class="line">            posecontent = xmlBuilder.createTextNode(<span class="string">&quot;Unspecified&quot;</span>)</span><br><span class="line">            pose.appendChild(posecontent)</span><br><span class="line">            <span class="built_in">object</span>.appendChild(pose)  <span class="comment"># pose标签结束</span></span><br><span class="line"></span><br><span class="line">            truncated = xmlBuilder.createElement(<span class="string">&quot;truncated&quot;</span>)  <span class="comment"># truncated标签</span></span><br><span class="line">            truncatedContent = xmlBuilder.createTextNode(<span class="string">&quot;0&quot;</span>)</span><br><span class="line">            truncated.appendChild(truncatedContent)</span><br><span class="line">            <span class="built_in">object</span>.appendChild(truncated)  <span class="comment"># truncated标签结束</span></span><br><span class="line"></span><br><span class="line">            difficult = xmlBuilder.createElement(<span class="string">&quot;difficult&quot;</span>)  <span class="comment"># difficult标签</span></span><br><span class="line">            difficultcontent = xmlBuilder.createTextNode(<span class="string">&quot;0&quot;</span>)</span><br><span class="line">            difficult.appendChild(difficultcontent)</span><br><span class="line">            <span class="built_in">object</span>.appendChild(difficult)  <span class="comment"># difficult标签结束</span></span><br><span class="line"></span><br><span class="line">            bndbox = xmlBuilder.createElement(<span class="string">&quot;bndbox&quot;</span>)  <span class="comment"># bndbox标签</span></span><br><span class="line">            xmin = xmlBuilder.createElement(<span class="string">&quot;xmin&quot;</span>)  <span class="comment"># xmin标签</span></span><br><span class="line">            mathData = <span class="built_in">int</span>(((<span class="built_in">float</span>(oneline[<span class="number">1</span>])) * Pwidth + <span class="number">1</span>) - (<span class="built_in">float</span>(oneline[<span class="number">3</span>])) * <span class="number">0.5</span> * Pwidth)</span><br><span class="line">            xminContent = xmlBuilder.createTextNode(<span class="built_in">str</span>(mathData))</span><br><span class="line">            xmin.appendChild(xminContent)</span><br><span class="line">            bndbox.appendChild(xmin)  <span class="comment"># xmin标签结束</span></span><br><span class="line"></span><br><span class="line">            ymin = xmlBuilder.createElement(<span class="string">&quot;ymin&quot;</span>)  <span class="comment"># ymin标签</span></span><br><span class="line">            mathData = <span class="built_in">int</span>(((<span class="built_in">float</span>(oneline[<span class="number">2</span>])) * Pheight + <span class="number">1</span>) - (<span class="built_in">float</span>(oneline[<span class="number">4</span>])) * <span class="number">0.5</span> * Pheight)</span><br><span class="line">            yminContent = xmlBuilder.createTextNode(<span class="built_in">str</span>(mathData))</span><br><span class="line">            ymin.appendChild(yminContent)</span><br><span class="line">            bndbox.appendChild(ymin)  <span class="comment"># ymin标签结束</span></span><br><span class="line"></span><br><span class="line">            xmax = xmlBuilder.createElement(<span class="string">&quot;xmax&quot;</span>)  <span class="comment"># xmax标签</span></span><br><span class="line">            mathData = <span class="built_in">int</span>(((<span class="built_in">float</span>(oneline[<span class="number">1</span>])) * Pwidth + <span class="number">1</span>) + (<span class="built_in">float</span>(oneline[<span class="number">3</span>])) * <span class="number">0.5</span> * Pwidth)</span><br><span class="line">            xmaxContent = xmlBuilder.createTextNode(<span class="built_in">str</span>(mathData))</span><br><span class="line">            xmax.appendChild(xmaxContent)</span><br><span class="line">            bndbox.appendChild(xmax)  <span class="comment"># xmax标签结束</span></span><br><span class="line"></span><br><span class="line">            ymax = xmlBuilder.createElement(<span class="string">&quot;ymax&quot;</span>)  <span class="comment"># ymax标签</span></span><br><span class="line">            mathData = <span class="built_in">int</span>(((<span class="built_in">float</span>(oneline[<span class="number">2</span>])) * Pheight + <span class="number">1</span>) + (<span class="built_in">float</span>(oneline[<span class="number">4</span>])) * <span class="number">0.5</span> * Pheight)</span><br><span class="line">            ymaxContent = xmlBuilder.createTextNode(<span class="built_in">str</span>(mathData))</span><br><span class="line">            ymax.appendChild(ymaxContent)</span><br><span class="line">            bndbox.appendChild(ymax)  <span class="comment"># ymax标签结束</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">object</span>.appendChild(bndbox)  <span class="comment"># bndbox标签结束</span></span><br><span class="line"></span><br><span class="line">            annotation.appendChild(<span class="built_in">object</span>)  <span class="comment"># object标签结束</span></span><br><span class="line"></span><br><span class="line">        f = <span class="built_in">open</span>(os.path.join(xmlPath, name.replace(<span class="string">&#x27;txt&#x27;</span>, <span class="string">&#x27;xml&#x27;</span>)), <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">        xmlBuilder.writexml(f, indent=<span class="string">&#x27;\t&#x27;</span>, newl=<span class="string">&#x27;\n&#x27;</span>, addindent=<span class="string">&#x27;\t&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># ann_path = r&quot;G:\CBB-Program\TKK\TKK-SDD\VOCdevkit\VOC2007\111/&quot;  # txt文件路径</span></span><br><span class="line"><span class="comment"># img_path = r&quot;G:\CBB-Program\TKK\TKK-SDD\VOCdevkit\VOC2007\JPEGImages/&quot;  # 图片路径</span></span><br><span class="line"><span class="comment"># xml_path = r&quot;G:\CBB-Program\TKK\TKK-SDD\VOCdevkit\VOC2007/&quot;  # xml保存路径</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    picPath = <span class="string">r&quot;G:\CBB-Program\TKK-10\TKK-SDD\VOCdevkit\VOC2007\JPEGImages/&quot;</span>         <span class="comment"># 原图文件夹路径</span></span><br><span class="line">    txtPath = <span class="string">r&quot;G:\CBB-Program\TKK-10\TKK-SDD\VOCdevkit\VOC2007\111/&quot;</span>    <span class="comment"># 原txt标签文件夹路径</span></span><br><span class="line">    xmlPath = <span class="string">r&quot;G:\CBB-Program\TKK-10\TKK-SDD\VOCdevkit\VOC2007\Annotations/&quot;</span>    <span class="comment"># 保存xml文件夹路径</span></span><br><span class="line">    datasetName = <span class="string">r&#x27;Pickable&#x27;</span>      <span class="comment"># 数据集名称</span></span><br><span class="line">    os.makedirs(xmlPath) <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(xmlPath) <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">    makexml(picPath, txtPath, xmlPath, datasetName)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="需要修改内容"><a href="#需要修改内容" class="headerlink" title="需要修改内容"></a>需要修改内容</h3><p>本程序仅仅适用<strong>一个标签</strong>的数据集，如果有多个标签，可以按照这个程序自行修改</p><ul><li>修改第10行，需要替换“标签名称”为自己的数据集标签</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">&#x27;0&#x27;</span>: <span class="string">&quot;标签名称&quot;</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>修改第108行，需要替换”原图文件夹路径”为自己的原图文件夹路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picPath = <span class="string">r&quot;原图文件夹路径&quot;</span>         <span class="comment"># 原图文件夹路径</span></span><br></pre></td></tr></table></figure><ul><li>修改第109行，需要替换”原txt标签文件夹路径”为自己的原txt标签文件夹路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">txtPath = <span class="string">r&quot;原txt标签文件夹路径&quot;</span>    <span class="comment"># 原txt标签文件夹路径</span></span><br></pre></td></tr></table></figure><ul><li>修改第110行，需要替换”保存xml文件夹路径”为自己的保存xml文件夹路径</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlPath = <span class="string">r&quot;保存xml文件夹路径&quot;</span>    <span class="comment"># 保存xml文件夹路径</span></span><br></pre></td></tr></table></figure><ul><li>修改第111行，需要替换’数据集名称’为自己的数据集名称</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datasetName = <span class="string">r&#x27;数据集名称&#x27;</span>      <span class="comment"># 数据集名称</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;您在深度学习领域的探索已经持续了半年时间，最初您选择了YOLOv8模型作为起点。在开始阶段，您亲自采集了数千张图像，并制作了一个数据集，所有</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="txt" scheme="https://sbsb.life/tags/txt/"/>
    
    <category term="xml" scheme="https://sbsb.life/tags/xml/"/>
    
    <category term="格式转换" scheme="https://sbsb.life/tags/%E6%A0%BC%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
    
    <category term="深度学习" scheme="https://sbsb.life/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>七牛云图床使用HTTPS协议</title>
    <link href="https://sbsb.life/2024/12/19/%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8HTTPS%E5%8D%8F%E8%AE%AE/"/>
    <id>https://sbsb.life/2024/12/19/%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A%E4%BD%BF%E7%94%A8HTTPS%E5%8D%8F%E8%AE%AE/</id>
    <published>2024-12-19T12:47:41.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、方法一（七牛云提供、推荐）"><a href="#一、方法一（七牛云提供、推荐）" class="headerlink" title="一、方法一（七牛云提供、推荐）"></a>一、方法一（七牛云提供、推荐）</h3><p>该方法使用七牛云提供的免费SSL、<strong><code>&lt;u&gt;</code>有效期为90天 <code>&lt;/u&gt;</code></strong></p><h4 id="第一步：登入网站并进入“控制台”"><a href="#第一步：登入网站并进入“控制台”" class="headerlink" title="第一步：登入网站并进入“控制台”"></a>第一步：登入网站并进入“控制台”</h4><p><img src="https://imagebed.sbsb.life/ec9abe8d0ca5861bc5b3045d9d8a3ab.png"></p><h4 id="第二步：点击“加速域名”"><a href="#第二步：点击“加速域名”" class="headerlink" title="第二步：点击“加速域名”"></a>第二步：点击“加速域名”</h4><p><img src="https://imagebed.sbsb.life/1624f68eaef0df4936063dc8335f8b6.png"></p><h4 id="第三步：点击“配置”"><a href="#第三步：点击“配置”" class="headerlink" title="第三步：点击“配置”"></a>第三步：点击“配置”</h4><p><img src="https://imagebed.sbsb.life/e2a93ba7b6f222cd8d4ebdd1d4c2a6a.png"></p><h4 id="第四步：下拉找到“HTTPS配置”、点击右边的“修改配置”"><a href="#第四步：下拉找到“HTTPS配置”、点击右边的“修改配置”" class="headerlink" title="第四步：下拉找到“HTTPS配置”、点击右边的“修改配置”"></a>第四步：下拉找到“HTTPS配置”、点击右边的“修改配置”</h4><p><img src="https://imagebed.sbsb.life/a4441b59d844078638ccd131cb7879a.png"></p><h4 id="第五步：点击“免费证书“，然后确认，等待15分钟作用就可以获得SSL证书"><a href="#第五步：点击“免费证书“，然后确认，等待15分钟作用就可以获得SSL证书" class="headerlink" title="第五步：点击“免费证书“，然后确认，等待15分钟作用就可以获得SSL证书"></a>第五步：点击“免费证书“，然后确认，等待15分钟作用就可以获得SSL证书</h4><p><img src="https://imagebed.sbsb.life/d7f10419b193782e427c2ad5ed03d00.png"></p><h3 id="二、方法二（腾讯云）"><a href="#二、方法二（腾讯云）" class="headerlink" title="二、方法二（腾讯云）"></a>二、方法二（腾讯云）</h3><p>该方法稍微复杂移动，<strong><code>&lt;u&gt;</code>有效期也为90天 <code>&lt;/u&gt;</code></strong></p><h4 id="第一步：登入腾讯云网站、搜索“SSL证书”并进入"><a href="#第一步：登入腾讯云网站、搜索“SSL证书”并进入" class="headerlink" title="第一步：登入腾讯云网站、搜索“SSL证书”并进入"></a>第一步：登入腾讯云网站、搜索“SSL证书”并进入</h4><p><img src="https://imagebed.sbsb.life/aa1366aeda08e4018bb2aece51442c8.png"></p><h4 id="第二步：点击“申请免费证书”"><a href="#第二步：点击“申请免费证书”" class="headerlink" title="第二步：点击“申请免费证书”"></a>第二步：点击“申请免费证书”</h4><p><img src="https://imagebed.sbsb.life/bcf7673072bb5da712d9c3f1c834ef8.png" alt="img"></p><p><img src="https://imagebed.sbsb.life/7ab0409813729207c6c3186c7dd71f7.png"></p><h4 id="第三步：填写域名并提交申请"><a href="#第三步：填写域名并提交申请" class="headerlink" title="第三步：填写域名并提交申请"></a>第三步：填写域名并提交申请</h4><p><img src="https://imagebed.sbsb.life/1a584ca7509091c1cfdff6bde3261d4.png"></p><h4 id="第四步：等待几分钟后就会申请成功、点击右侧的下载"><a href="#第四步：等待几分钟后就会申请成功、点击右侧的下载" class="headerlink" title="第四步：等待几分钟后就会申请成功、点击右侧的下载"></a>第四步：等待几分钟后就会申请成功、点击右侧的下载</h4><p><img src="https://imagebed.sbsb.life/3155aacdf761e7339872aefa766435c.png"></p><h4 id="第五步：下载-pem文件格式"><a href="#第五步：下载-pem文件格式" class="headerlink" title="第五步：下载 pem文件格式"></a>第五步：下载 <code>pem</code>文件格式</h4><p><img src="https://imagebed.sbsb.life/c1e339676f684812b567aeda3893d09.png"></p><h4 id="第六步：根据方法一找到七牛云中的HTTPS配置、选择本地证书、并点击上传证书"><a href="#第六步：根据方法一找到七牛云中的HTTPS配置、选择本地证书、并点击上传证书" class="headerlink" title="第六步：根据方法一找到七牛云中的HTTPS配置、选择本地证书、并点击上传证书"></a>第六步：根据方法一找到七牛云中的HTTPS配置、选择本地证书、并点击上传证书</h4><p><img src="https://imagebed.sbsb.life/8fcd21bcc1b765942fc51338ae26f84.png"></p><h4 id="第七步：上传证书内容和私钥、证书内容和私钥在刚刚下载的文件中（sbsb-life-bundle-crt证书内容、sbsb-life-key密钥），然后即配置成功"><a href="#第七步：上传证书内容和私钥、证书内容和私钥在刚刚下载的文件中（sbsb-life-bundle-crt证书内容、sbsb-life-key密钥），然后即配置成功" class="headerlink" title="第七步：上传证书内容和私钥、证书内容和私钥在刚刚下载的文件中（sbsb.life_bundle.crt证书内容、sbsb.life.key密钥），然后即配置成功"></a>第七步：上传证书内容和私钥、证书内容和私钥在刚刚下载的文件中（<code>sbsb.life_bundle.crt</code>证书内容、<code>sbsb.life.key</code>密钥），然后即配置成功</h4><p><img src="https://imagebed.sbsb.life/9b96be419bd6357add2d989c76b4873.png"></p><p><img src="https://imagebed.sbsb.life/6f19bdf22d3ff6e31295b71c7580f58.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、方法一（七牛云提供、推荐）&quot;&gt;&lt;a href=&quot;#一、方法一（七牛云提供、推荐）&quot; class=&quot;headerlink&quot; title=&quot;一、方法一（七牛云提供、推荐）&quot;&gt;&lt;/a&gt;一、方法一（七牛云提供、推荐）&lt;/h3&gt;&lt;p&gt;该方法使用七牛云提供的免费SSL、&lt;</summary>
      
    
    
    
    <category term="网站建设" scheme="https://sbsb.life/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="七牛云图床" scheme="https://sbsb.life/tags/%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A/"/>
    
    <category term="HTTP协议" scheme="https://sbsb.life/tags/HTTP%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>关于使用自建七牛云图床的图片链接有时不显示问题</title>
    <link href="https://sbsb.life/2024/12/19/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8%E8%87%AA%E5%BB%BA%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A%E7%9A%84%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5%E6%9C%89%E6%97%B6%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
    <id>https://sbsb.life/2024/12/19/%E5%85%B3%E4%BA%8E%E4%BD%BF%E7%94%A8%E8%87%AA%E5%BB%BA%E4%B8%83%E7%89%9B%E4%BA%91%E5%9B%BE%E5%BA%8A%E7%9A%84%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5%E6%9C%89%E6%97%B6%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</id>
    <published>2024-12-19T12:15:03.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>数月前，我购入了一台索尼A6400半画幅微单相机，每天都带着无比激动的心情外出捕捉光影。我拍摄了一些自认为颇具艺术感的作品，并在我的个人笔记中创建了一个“摄影作品”页面。我按照常规流程，将照片上传至七牛云图床，并在页面上附上了七牛云图床生成的链接。然而，奇怪的是，这些照片在电脑上无法显示，而在手机上查看却一切正常。我进行了广泛的搜索，试图找到解决方案，但始终按照Hexo出现bug的思路去处理，却始终未能找到答案。</p><p>直到一个多月后的今天，我在上传《基于MATLAB的指纹识别系统》的笔记时，意外地发现笔记中所有来自七牛云图床的图片都无法显示，而其他图床的图片却显示正常。这时，我才意识到问题可能出在七牛云图床本身。经过一番深入的搜索和排查，我终于发现问题的根源在于没有强制使用HTTPS协议。解决了这个小插曲后，我的“摄影作品”页面终于能够在各种设备上完美展示了。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>强制使用HTTPS协议</p><h3 id="HTTPS协议概念"><a href="#HTTPS协议概念" class="headerlink" title="HTTPS协议概念"></a>HTTPS协议概念</h3><p>HTTPS（HyperText Transfer Protocol Secure）是 HTTP 协议的安全版本。HTTP 是用于客户端与服务器之间传输网页数据的协议，而 HTTPS 在 HTTP 协议的基础上添加了一层 SSL&#x2F;TLS 加密协议，使得传输的数据在网络中不易被窃取或篡改。HTTPS 通常用于传输敏感信息，如登录凭证、支付信息、个人数据等。</p><p>与 HTTP 协议不同，HTTPS 在数据传输过程中会对信息进行加密，确保数据在传输过程中不被第三方监听或修改。这就是 HTTPS 被广泛应用于现代互联网服务，特别是涉及金融和隐私的应用场景中的原因。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;数月前，我购入了一台索尼A6400半画幅微单相机，每天都带着无比激动的心情外出捕捉光影。我拍摄了一些自认为颇具艺术感的作品，</summary>
      
    
    
    
    <category term="网站建设" scheme="https://sbsb.life/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="课程作业" scheme="https://sbsb.life/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="MATLAB" scheme="https://sbsb.life/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>基于MATLAB的指纹识别系统</title>
    <link href="https://sbsb.life/2024/12/01/%E5%9F%BA%E4%BA%8EMATLAB%E7%9A%84%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F/"/>
    <id>https://sbsb.life/2024/12/01/%E5%9F%BA%E4%BA%8EMATLAB%E7%9A%84%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB%E7%B3%BB%E7%BB%9F/</id>
    <published>2024-12-01T10:43:52.000Z</published>
    <updated>2025-04-10T16:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>摘要：</strong> 本文设计并实现了一个基于MATLAB的指纹识别系统，旨在为指纹身份验证提供高效、可靠的解决方案。系统的主要功能包括指纹图像的采集、特征提取、数据库管理和指纹匹配。在系统的实现过程中，首先通过图像预处理对采集到的指纹图像进行二值化和骨架化，提取出指纹的骨架结构作为特征。然后，将提取的指纹特征以特定格式保存到数据库中，为后续的匹配过程提供依据。在匹配阶段，系统通过计算输入指纹与数据库中存储指纹特征之间的欧氏距离，判定是否存在匹配的指纹。通过该系统，用户可以轻松完成指纹的录入和比对，验证其身份信息。实验结果表明，系统具有较高的识别率和稳定性，能够有效地进行指纹身份验证。该指纹识别系统可广泛应用于门禁系统、金融安全等领域，为安全防护提供有力保障。</p><p><strong>关键词：</strong> 指纹识别；特征提取；欧氏距离；MATLAB；图像处理；身份验证</p><h3 id="一、设计任务、目的和要求"><a href="#一、设计任务、目的和要求" class="headerlink" title="一、设计任务、目的和要求"></a>一、设计任务、目的和要求</h3><p>指纹识别是一种基于生物特征的身份认证技术。近年来，伴随着嵌入式计算技术的迅速发展及其价格优势的不断提升，指纹识别应用日益广泛，不仅可用于手机、笔记本电脑等各种数字设备，也应用于刑侦、IT、医疗、金融等众多领域。</p><p>本项目的设计任务是开发一个基于MATLAB的指纹识别系统，实现指纹图像的采集、特征提取、数据库管理和匹配功能。系统需通过图像预处理（如二值化、骨架化）提取指纹的有效特征，并使用欧氏距离进行匹配操作。目标是实现一个高效、稳定的指纹匹配方法，能够在指纹数据库中准确识别输入指纹。要求系统具有较高的匹配准确率，并在实际应用中提供安全可靠的身份验证功能。</p><h3 id="二、-总体方案设计"><a href="#二、-总体方案设计" class="headerlink" title="二、 总体方案设计"></a><strong>二、</strong> 总体方案设计</h3><p>本指纹识别系统的运行环境为MATLAB R2024a，操作系统为Windows。系统开发平台为MATLAB编程环境，利用其强大的图像处理工具箱和矩阵计算能力进行图像预处理、特征提取和匹配计算。系统主要采用的编码算法为基于图像处理的特征提取与匹配算法。首先，输入的指纹图像经过二值化处理，然后通过骨架化操作提取指纹的骨架结构。接着对于特征的匹配，采用欧氏距离计算两指纹特征向量之间的相似度，若相似度低于预设阈值，则认为匹配成功。</p><p><img src="https://imagebed.sbsb.life/%E8%BE%93%E5%85%A5%E6%8C%87%E7%BA%B9%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="img" title="储存指纹信息"></p><p><img src="https://imagebed.sbsb.life/%E8%AF%86%E5%88%AB%E6%8C%87%E7%BA%B9%E6%B5%81%E7%A8%8B%E5%9B%BE.jpg" alt="img"></p><h3 id="三、-理论基础"><a href="#三、-理论基础" class="headerlink" title="三、 理论基础"></a><strong>三、</strong> 理论基础</h3><h4 id="1-图像预处理"><a href="#1-图像预处理" class="headerlink" title="1.图像预处理"></a>1.图像预处理</h4><p>指纹识别系统中的第一步是图像预处理，其目的是将原始的指纹图像转化为便于后续分析的形式。原始的指纹图像可能是彩色图像或灰度图像，首先需要将其转化为灰度图像，以便后续处理。彩色图像通过RGB值转化为灰度图像，简化了图像数据的复杂性。通过将灰度图像中的像素值转化为黑白两种颜色，实现图像的二值化处理。常用的二值化方法包括全局阈值法和自适应阈值法，其中自适应阈值法能够更好地处理不同光照条件下的指纹图像。为了提取指纹的脊线结构，我们使用形态学操作中的骨架化算法（bwmorph 函数）。骨架化操作能够将指纹的脊线结构提取出来，保留细节，并为特征提取提供有效的输入。</p><h4 id="2-特征提取"><a href="#2-特征提取" class="headerlink" title="2.特征提取"></a>2.特征提取</h4><p>指纹识别的关键在于从图像中提取出具有区分性的特征。指纹图像的特征主要包括脊线、细节点（如分叉点、末端点等）及其相对位置。通过骨架化操作得到指纹的脊线结构，这一结构包含了指纹的主要特征。通过bwmorph(bw, ‘skel’, Inf) 操作，我们提取出指纹的骨架图像。为了方便后续的指纹匹配，我们将提取到的指纹骨架图像展平成一维特征向量。在本系统中，指纹图像的骨架化结果 skel 被转化为一维特征向量 feature_vector。这个特征向量将用于后续的匹配操作。</p><h4 id="3-指纹匹配"><a href="#3-指纹匹配" class="headerlink" title="3.指纹匹配"></a>3.指纹匹配</h4><p>指纹匹配是指纹识别中的核心环节，其目的是通过比较输入指纹与数据库中存储的指纹特征之间的相似性，来判断两者是否为同一指纹。在本系统中，指纹匹配是通过计算欧氏距离来实现的。欧氏距离是衡量两点之间直线距离的标准方法。在指纹识别中，欧氏距离用于衡量两个指纹特征向量之间的相似度。在指纹匹配过程中，输入指纹的特征向量与数据库中所有存储的特征向量进行比对，计算每一对指纹之间的欧氏距离。然后，系统选取距离最小的数据库指纹，并判断其是否低于设定的匹配阈值（如阈值为1），如果小于该阈值，则认为输入指纹与数据库中的指纹匹配，否则认为匹配失败。</p><h4 id="4-特征数据库存储"><a href="#4-特征数据库存储" class="headerlink" title="4.特征数据库存储"></a>4.特征数据库存储</h4><p>在系统的指纹录入阶段，提取的每个指纹特征都被保存为一个独立的.mat 文件，这些文件存储在数据库文件夹中。每个文件保存了指纹的特征向量和对应的编号，便于后续的指纹匹配。数据库中的每个指纹特征文件都包含了名为 feature_vector 的变量，用于存储特征向量。在匹配阶段，系统会加载数据库中的所有指纹特征，计算输入指纹与每个数据库指纹之间的欧氏距离，并进行匹配判断。</p><h4 id="5-系统的优化与改进"><a href="#5-系统的优化与改进" class="headerlink" title="5.系统的优化与改进"></a>5.系统的优化与改进</h4><p>除了脊线特征外，还可以结合其他特征（如指纹纹理、纹线方向等）进行融合，提高识别准确率。通过引入深度学习技术（如卷积神经网络，CNN），可以提高指纹识别的鲁棒性和准确性，尤其是在指纹图像质量较差或环境光线复杂的情况下。本系统基于传统的图像处理和欧氏距离匹配算法，实现了一个简洁、高效的指纹识别系统，能够为实际应用提供快速的身份验证服务。</p><h3 id="四、模块测试与分析"><a href="#四、模块测试与分析" class="headerlink" title="四、模块测试与分析"></a>四、模块测试与分析</h3><h4 id="1-存储指纹信息"><a href="#1-存储指纹信息" class="headerlink" title="1.存储指纹信息"></a>1.存储指纹信息</h4><h5 id="（1）读取需储存的指纹图片文件夹"><a href="#（1）读取需储存的指纹图片文件夹" class="headerlink" title="（1）读取需储存的指纹图片文件夹"></a>（1）读取需储存的指纹图片文件夹</h5><p><img src="https://imagebed.sbsb.life/4bbef8ef1fc313de44d7361a8b65f1b.png"></p><h5 id="（2）灰度化处理"><a href="#（2）灰度化处理" class="headerlink" title="（2）灰度化处理"></a>（2）灰度化处理</h5><p>彩色图像在完成图像增强后进行二值化前需要先进行灰度化处理，这样可以提高黑白（二值化）图像的清晰度。</p><p><img src="https://imagebed.sbsb.life/bcf988bb8190bcae43b2e5495489e7e.png"></p><h5 id="（3）二值化处理"><a href="#（3）二值化处理" class="headerlink" title="（3）二值化处理"></a>（3）二值化处理</h5><p>图像的二值化处理最常用的算法是图像阈值分割算法。该算法处理方法简单,通过阈值分割后的图形清晰,在所待处理的图像中,将图像中的关键部分进行目标区域划分,将冗余的部分设定为背景区域。</p><p><img src="https://imagebed.sbsb.life/92cd984a546778f71ad01e2eafde56d.png"></p><h5 id="（4）骨架化处理"><a href="#（4）骨架化处理" class="headerlink" title="（4）骨架化处理"></a>（4）骨架化处理</h5><p>图像骨架化提取就是将嵴的宽度降为单个像素的宽度，得到嵴线的骨架图像的过程。这个过程进一步减少了图像数据量，清晰化了嵴线形态，为之后的特征值提取作好准备。</p><p><img src="http://imagebed.sbsb.life/ba42043b1a00967f4237ef56de103b8.png"></p><h5 id="（5）存储指纹信息为mat文件"><a href="#（5）存储指纹信息为mat文件" class="headerlink" title="（5）存储指纹信息为mat文件"></a>（5）存储指纹信息为mat文件</h5><p><img src="http://imagebed.sbsb.life/61d940471b4fc890468dc1c84f13b22.png" alt="img"></p><h4 id="2-检测指纹信息"><a href="#2-检测指纹信息" class="headerlink" title="2.检测指纹信息"></a>2.检测指纹信息</h4><h5 id="（1）读取被检测指纹图片"><a href="#（1）读取被检测指纹图片" class="headerlink" title="（1）读取被检测指纹图片"></a>（1）读取被检测指纹图片</h5><p><img src="http://imagebed.sbsb.life/4bbef8ef1fc313de44d7361a8b65f1b.png"></p><h5 id="（2）灰度化处理-1"><a href="#（2）灰度化处理-1" class="headerlink" title="（2）灰度化处理"></a>（2）灰度化处理</h5><p><img src="http://imagebed.sbsb.life/bcf988bb8190bcae43b2e5495489e7e.png"></p><h5 id="（3）二值化处理-1"><a href="#（3）二值化处理-1" class="headerlink" title="（3）二值化处理"></a>（3）二值化处理</h5><p><img src="http://imagebed.sbsb.life/92cd984a546778f71ad01e2eafde56d.png"></p><h5 id="（4）骨架化处理-1"><a href="#（4）骨架化处理-1" class="headerlink" title="（4）骨架化处理"></a>（4）骨架化处理</h5><p><img src="http://imagebed.sbsb.life/ba42043b1a00967f4237ef56de103b8.png"></p><h5 id="（5）匹配数据库"><a href="#（5）匹配数据库" class="headerlink" title="（5）匹配数据库"></a>（5）匹配数据库</h5><p>所有指纹信息与输入指纹的欧几里得距离，由图知与3号指纹欧几里得距离为0。</p><p><img src="http://imagebed.sbsb.life/313794adac24dcda3418858bad2b11b.png"></p><h5 id="（6）输出结果"><a href="#（6）输出结果" class="headerlink" title="（6）输出结果"></a>（6）输出结果</h5><p>输入指纹与数据库3号指纹信息相同，匹配完成。</p><p><img src="http://imagebed.sbsb.life/8a34c9fc8090929f5e6c2e859316ee0.png" alt="img"></p><h3 id="五-、测试与调试过程"><a href="#五-、测试与调试过程" class="headerlink" title="五 、测试与调试过程"></a><strong>五</strong> <strong>、测试与调试过程</strong></h3><p>在整个测试过程中，系统表现出较好的稳定性与准确性，能够快速地完成指纹图像的处理与匹配任务。匹配结果的准确性较高，且在不同质量的图像上都能表现出一定的鲁棒性。通过优化算法和参数配置，系统能够处理较大的指纹数据库，并保证了处理速度和内存消耗在可接受范围内。通过此次测试与调试，系统已经能够满足实际应用需求，并为后续的部署和推广打下了坚实的基础。</p><h3 id="六、总结"><a href="#六、总结" class="headerlink" title="六、总结"></a><strong>六、总结</strong></h3><p>本论文设计并实现了一个基于MATLAB的指纹识别系统，该系统主要包括指纹图像的采集、特征提取、数据库管理以及指纹匹配功能。通过对指纹图像的预处理、二值化、骨架化等步骤，实现了指纹特征的提取，并将提取的特征保存至数据库中。在匹配阶段，系统通过计算输入指纹与数据库中指纹特征之间的欧几里得距离，成功实现了指纹的比对和匹配。</p><p>在系统实现过程中，通过对指纹图像的多种处理方法进行了测试与优化，提升了系统的准确性和鲁棒性。同时，为了提高用户体验，简化了用户操作流程，保证了系统能够在不同用户场景中高效运行。</p><p>尽管系统已经在一定程度上完成了指纹识别的基本功能，但仍有一些改进空间。例如，指纹图像质量较差时，系统的识别效果可能受到影响，因此，未来的研究可以集中于提高图像预处理的精度，或者引入更为先进的深度学习技术来提升识别率。</p><p>本文所设计的指纹识别系统具有较强的应用前景，在安全领域如身份认证和门禁系统等方面有着广泛的应用潜力。未来，随着算法的进一步优化和硬件的更新升级，指纹识别技术将发挥更大的作用，为各类智能系统提供更加精准和安全的身份验证手段。</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><h4 id="1-存储指纹MATLAB程序"><a href="#1-存储指纹MATLAB程序" class="headerlink" title="1.存储指纹MATLAB程序"></a>1.存储指纹MATLAB程序</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 清空环境变量和关闭所有图形界面</span></span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 弹窗让用户选择文件夹</span></span><br><span class="line">folderPath = uigetdir;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isequal</span>(folderPath, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;用户取消了选择&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 获取文件夹中所有图像的列表</span></span><br><span class="line">imageFiles = dir(fullfile(folderPath, <span class="string">&#x27;*.*&#x27;</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">% 创建存储指纹特征的文件夹</span></span><br><span class="line">featureFolder = fullfile(folderPath, <span class="string">&#x27;FingerprintDatabase&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> ~exist(featureFolder, <span class="string">&#x27;dir&#x27;</span>)</span><br><span class="line">mkdir(featureFolder);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 初始化编号计数</span></span><br><span class="line">fingerprint_id = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 遍历所有图像文件</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">length</span>(imageFiles)</span><br><span class="line"><span class="keyword">if</span> ~imageFiles(k).isdir &amp;&amp; ~startsWith(imageFiles(k).name, <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">img = imread(fullfile(folderPath, imageFiles(k).name));</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">size</span>(img, <span class="number">3</span>) == <span class="number">3</span></span><br><span class="line">img = rgb2gray(img);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">bw = imbinarize(img);</span><br><span class="line">skel = bwmorph(bw, <span class="string">&#x27;skel&#x27;</span>, Inf);</span><br><span class="line">feature_vector = double(skel(:));</span><br><span class="line"><span class="comment">% 保存特征和编号</span></span><br><span class="line">featureFilename = fullfile(featureFolder, sprintf(<span class="string">&#x27;fingerprint_%d.mat&#x27;</span>, fingerprint_id));</span><br><span class="line"><span class="comment">% 确保保存feature_vector和fingerprint_id</span></span><br><span class="line">save(featureFilename, <span class="string">&#x27;feature_vector&#x27;</span>, <span class="string">&#x27;fingerprint_id&#x27;</span>); </span><br><span class="line">fingerprint_id = fingerprint_id + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;所有指纹图像已处理并保存特征。&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="2-匹配指纹MATLAB程序"><a href="#2-匹配指纹MATLAB程序" class="headerlink" title="2.匹配指纹MATLAB程序"></a>2.<strong>匹配指纹MATLAB程序</strong></h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">% 清空环境变量和关闭所有图形界面</span></span><br><span class="line">clear;</span><br><span class="line">clc;</span><br><span class="line">close all;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 弹窗让用户选择指纹图像文件</span></span><br><span class="line">[filename, pathname] = uigetfile(&#123;<span class="string">&#x27;*.*&#x27;</span>, <span class="string">&#x27;All Image Files (*.*)&#x27;</span>&#125;, <span class="string">&#x27;请选择指纹图片&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">isequal</span>(filename, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;用户取消了选择&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">img = imread(fullfile(pathname, filename));</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">size</span>(img, <span class="number">3</span>) == <span class="number">3</span></span><br><span class="line">img = rgb2gray(img);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">bw = imbinarize(img);</span><br><span class="line">skel = bwmorph(bw, <span class="string">&#x27;skel&#x27;</span>, Inf);</span><br><span class="line">feature_vector = double(skel(:))&#x27;;</span><br><span class="line"></span><br><span class="line">databaseFolder = <span class="string">&#x27;D:\Desktop\图像处理论文\Fingerprint\FingerprintDatabase&#x27;</span>; <span class="comment">% 数据库路径</span></span><br><span class="line">databaseFiles = dir(fullfile(databaseFolder, <span class="string">&#x27;*.mat&#x27;</span>));</span><br><span class="line"></span><br><span class="line">maxFeatureLength = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 动态获取特征</span></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">length</span>(databaseFiles)</span><br><span class="line">loadedData = load(fullfile(databaseFolder, databaseFiles(k).name));</span><br><span class="line">fieldNames = fieldnames(loadedData); <span class="comment">% 获取字段名</span></span><br><span class="line">currentFeature = loadedData.(fieldNames&#123;<span class="number">1</span>&#125;); <span class="comment">% 动态读取特征字段</span></span><br><span class="line">maxFeatureLength = <span class="built_in">max</span>(maxFeatureLength, <span class="built_in">length</span>(currentFeature));</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">database_features = NaN(<span class="built_in">length</span>(databaseFiles), maxFeatureLength);</span><br><span class="line">fingerprint_ids = <span class="built_in">zeros</span>(<span class="built_in">length</span>(databaseFiles), <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k = <span class="number">1</span>:<span class="built_in">length</span>(databaseFiles)</span><br><span class="line">loadedData = load(fullfile(databaseFolder, databaseFiles(k).name));</span><br><span class="line">fieldNames = fieldnames(loadedData);</span><br><span class="line">currentFeature = double(loadedData.(fieldNames&#123;<span class="number">1</span>&#125;))&#x27;; <span class="comment">% 获取特征向量</span></span><br><span class="line">paddedFeature = padarray(currentFeature, [<span class="number">0</span>, maxFeatureLength - <span class="built_in">length</span>(currentFeature)], <span class="number">0</span>, <span class="string">&#x27;post&#x27;</span>);</span><br><span class="line">database_features(k, :) = paddedFeature;</span><br><span class="line"><span class="comment">% 获取并保存指纹ID</span></span><br><span class="line">fingerprint_ids(k) = loadedData.fingerprint_id;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 补齐输入的特征向量</span></span><br><span class="line">paddedInputFeature = padarray(feature_vector, [<span class="number">0</span>, maxFeatureLength - <span class="built_in">length</span>(feature_vector)], <span class="number">0</span>, <span class="string">&#x27;post&#x27;</span>);</span><br><span class="line">distances = pdist2(paddedInputFeature, database_features, <span class="string">&#x27;euclidean&#x27;</span>);</span><br><span class="line">[min_distance, idx] = <span class="built_in">min</span>(distances);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 输出匹配结果</span></span><br><span class="line"><span class="keyword">if</span> min_distance &lt; <span class="number">1</span></span><br><span class="line"><span class="built_in">disp</span>([<span class="string">&#x27;指纹匹配成功，匹配的编号为: &#x27;</span>, num2str(fingerprint_ids(idx))]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">disp</span>(<span class="string">&#x27;指纹匹配失败，数据库中不存在该指纹。&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 显示原始图像和提取的特征</span></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line">imshow(img);</span><br><span class="line">title(<span class="string">&#x27;原始指纹图像&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">figure</span>;</span><br><span class="line">imshow(skel);</span><br><span class="line">title(<span class="string">&#x27;提取的指纹骨架&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="3-运行结果"><a href="#3-运行结果" class="headerlink" title="3.运行结果"></a>3.运行结果</h4><h5 id="（1）储存指纹运行结果"><a href="#（1）储存指纹运行结果" class="headerlink" title="（1）储存指纹运行结果"></a>（1）储存指纹运行结果</h5><p><img src="http://imagebed.sbsb.life/%E5%82%A8%E5%AD%98%E6%8C%87%E7%BA%B9%E7%A8%8B%E5%BA%8F.jpg" alt="img"></p><h5 id="（2）匹配指纹运行结果"><a href="#（2）匹配指纹运行结果" class="headerlink" title="（2）匹配指纹运行结果"></a>（2）匹配指纹运行结果</h5><p><img src="http://imagebed.sbsb.life/%E5%8C%B9%E9%85%8D%E6%8C%87%E7%BA%B9%E7%A8%8B%E5%BA%8F.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;摘要：&lt;/strong&gt; 本文设计并实现了一个基于MATLAB的指纹识别系统，旨在为指纹身份验证提供高效、可靠的解决方案。系统的主要功能包括指纹图像的采集、特征提取、数据库管理和指纹匹配。在系统的实现过程中，首先通过图像预处理对采集到的指纹图像进行二值化和骨</summary>
      
    
    
    
    <category term="其他" scheme="https://sbsb.life/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="课程作业" scheme="https://sbsb.life/tags/%E8%AF%BE%E7%A8%8B%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="MATLAB" scheme="https://sbsb.life/tags/MATLAB/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用报错合集</title>
    <link href="https://sbsb.life/2024/11/04/Hexo%E4%BD%BF%E7%94%A8%E6%8A%A5%E9%94%99%E5%90%88%E9%9B%86/"/>
    <id>https://sbsb.life/2024/11/04/Hexo%E4%BD%BF%E7%94%A8%E6%8A%A5%E9%94%99%E5%90%88%E9%9B%86/</id>
    <published>2024-11-04T10:10:52.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="报错一：bash-hexo-command-not-found"><a href="#报错一：bash-hexo-command-not-found" class="headerlink" title="报错一：bash: hexo: command not found"></a>报错一：bash: hexo: command not found</h3><p>本着能解决问题就不重装的原则，首先检查 <code>nodejs</code>和 <code>npm</code>是否正常，依次输入命令 <code>node -v</code>和 <code>npm -v</code>看看是否有相关版本信息。</p><p>出现了版本信息就证明 <code>nodejs</code>和 <code>npm</code>是没有问题的，那么就应该是环境变量的配置问题了，在【此电脑】右键【属性】，依次选择【高级系统设置】-【环境变量】，选择系统变量 Path，将 <code>node_modules</code>下的 <code> .bin</code>文件路径添加到 <code>Path</code>里面</p><p>具体步骤如下：</p><p><img src="https://imagebed.sbsb.life/image-20250314193427776.png" alt="image-20250314193427776"></p><p><img src="https://pic.imgdb.cn/item/6728a210d29ded1a8cb730b4.png"></p><p><img src="https://pic.imgdb.cn/item/6728a22fd29ded1a8cb75147.png"></p><p><img src="https://pic.imgdb.cn/item/6728a294d29ded1a8cb7da96.png"></p><p><img src="https://pic.imgdb.cn/item/6728a352d29ded1a8cb8d6da.png"></p><p><img src="https://pic.imgdb.cn/item/6728a391d29ded1a8cb9417d.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;报错一：bash-hexo-command-not-found&quot;&gt;&lt;a href=&quot;#报错一：bash-hexo-command-not-found&quot; class=&quot;headerlink&quot; title=&quot;报错一：bash: hexo: command not fo</summary>
      
    
    
    
    <category term="网站建设" scheme="https://sbsb.life/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="报错" scheme="https://sbsb.life/tags/%E6%8A%A5%E9%94%99/"/>
    
    <category term="解决方法" scheme="https://sbsb.life/tags/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>在另一台电脑上传文章（hexo）</title>
    <link href="https://sbsb.life/2024/11/02/%E5%9C%A8%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E4%BC%A0%E6%96%87%E7%AB%A0%EF%BC%88hexo%EF%BC%89/"/>
    <id>https://sbsb.life/2024/11/02/%E5%9C%A8%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E4%BC%A0%E6%96%87%E7%AB%A0%EF%BC%88hexo%EF%BC%89/</id>
    <published>2024-11-02T14:19:05.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>时隔一年半，在次捡起此博客，本人写这篇文章的目的是为了在忘记怎么上传文章时，可以参考这篇文章的教程顺利上传文章。该教程是只有源文件的情况下，在任意电脑可以快速上传文章。</p><hr><h3 id="一、环境部署"><a href="#一、环境部署" class="headerlink" title="一、环境部署"></a>一、环境部署</h3><h4 id="1-1安装Node-js和Git"><a href="#1-1安装Node-js和Git" class="headerlink" title="1.1安装Node.js和Git"></a>1.1安装Node.js和Git</h4><p>在使用Hexo之前，我们需要确保电脑上已经安装好以下软件：</p><ul><li><a href="http://nodejs.org/" title="Node.js">Node.js</a> (Node.js版本需不低于10.13，建议使用Node.js 12.0及以上版本)</li><li><a href="http://git-scm.com/" title="Git">Git</a></li></ul><p>关于Node.js和Git的具体安装细节自行上网搜索（除了安装时需要更改安装地址，其他都点“下一步”）</p><h4 id="1-2安装hexo"><a href="#1-2安装hexo" class="headerlink" title="1.2安装hexo"></a>1.2安装hexo</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>以上命令安装的是hexo的脚手架，如果你要安装Hexo的瘦身版，自己定制Hexo，官方推荐的下载方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo</span><br></pre></td></tr></table></figure><p>检测是否安装成功可以输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo v</span><br></pre></td></tr></table></figure><h4 id="1-3GitHub添加SSH-KEYS"><a href="#1-3GitHub添加SSH-KEYS" class="headerlink" title="1.3GitHub添加SSH KEYS"></a><strong>1.3GitHub添加SSH KEYS</strong></h4><p>在GitHub的 <code>ssh keys</code>那里再添加一个当前电脑的环境生成的key，但是可别把原来的电脑删掉了啊。</p><ul><li>设置设置用户名和邮箱</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><ul><li>创建SSH 密匙</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><ul><li>添加SSH密钥</li></ul><p>进入 <code>C:\Users\用户名.ssh</code>目录（要勾选显示“隐藏的项目”），用记事本打开公钥 <code>id_rsa.pub</code>文件并复制里面的内容。</p><p>登入GitHub ，进入 <code>Settings</code>页面，选择左边栏的 <code>SSH and GPG keys</code>，点击 <code>New SSH key</code>。</p><p>Title随便取个名字，粘贴复制的 <code>id_rsa.pub</code>内容到Key中，点击 <code>Add SSH key</code>完成添加。</p><ul><li>验证连接</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现“Are you sure……”，输入 yes 回车确认。显示“Hi xxx! You’ve successfully……” 即连接成功。</p><h3 id="二、上传文章"><a href="#二、上传文章" class="headerlink" title="二、上传文章"></a>二、上传文章</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new test</span><br><span class="line">hexo g# 生成 public 文件夹，写完文章执行</span><br><span class="line">hexo s# 启动 hexo 服务</span><br></pre></td></tr></table></figure><p>其中 <code>hexo new test</code>表示新建一篇名为test的博文，<code>hexo g</code>表示生成，是 <code>hexo generate</code>的简写，<code>hexo s</code>在本地运行hexo服务器，是 <code>hexo server</code>的简写。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean   // 清除缓存 网页正常情况下可以忽略此条命令</span><br><span class="line">hexo g       // 生成静态网页</span><br><span class="line">hexo d       // 开始部署</span><br></pre></td></tr></table></figure><p>其中 <code>hexo d</code>表示 <code>hexo deploy</code>的简写，自动生成网站静态文件，并部署到设定的仓库，十分方便！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;时隔一年半，在次捡起此博客，本人写这篇文章的目的是为了在忘记怎么上传文章时，可以参考这篇文章的教程顺利上传文章。该教程是只有源文件的情况下，</summary>
      
    
    
    
    <category term="网站建设" scheme="https://sbsb.life/categories/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="hexo" scheme="https://sbsb.life/tags/hexo/"/>
    
    <category term="上传文章" scheme="https://sbsb.life/tags/%E4%B8%8A%E4%BC%A0%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>如何快速打开Github</title>
    <link href="https://sbsb.life/2023/03/09/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80Github-md/"/>
    <id>https://sbsb.life/2023/03/09/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%89%93%E5%BC%80Github-md/</id>
    <published>2023-03-09T15:42:47.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>在国内不用科学访问GitHub经常打不开</p><hr><h3 id="第一步：查询github-com目前的ip地址"><a href="#第一步：查询github-com目前的ip地址" class="headerlink" title="第一步：查询github.com目前的ip地址"></a>第一步：查询github.com目前的ip地址</h3><p>打开<a href="www.ipaddress.com">ipaddress.com</a>,然后在搜索栏搜索 <code>github.com</code>，找到红色框圈住的就是目前的ip地址 <code>140.82.114.4</code><br><img src="https://pic.imgdb.cn/item/6409ffe9f144a0100750396b.png" alt="ip"></p><h3 id="第二步：修改hosts文件"><a href="#第二步：修改hosts文件" class="headerlink" title="第二步：修改hosts文件"></a>第二步：修改hosts文件</h3><p>hosts文件路径 C:\Windows\System32\drivers\etc，打开里面的hosts文件（不带文件类型的那一个），文件末尾追加这一行<br><img src="https://pic.imgdb.cn/item/640a00a3f144a0100751847d.png" alt="hosts">\</p><h3 id="第三步：刷新DNS"><a href="#第三步：刷新DNS" class="headerlink" title="第三步：刷新DNS"></a>第三步：刷新DNS</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig/flushdns</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/640a0134f144a01007528a8b.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在国内不用科学访问GitHub经常打不开&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;第一步：查询github-com目前的ip地址&quot;&gt;&lt;a href=&quot;#第一步：查询github-com目前的ip地址&quot; class=&quot;headerlink&quot; title=&quot;第一步：查询github.</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Github" scheme="https://sbsb.life/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>一个命令获取树莓派IP地址</title>
    <link href="https://sbsb.life/2023/03/09/%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%8E%B7%E5%8F%96%E6%A0%91%E8%8E%93%E6%B4%BEIP%E5%9C%B0%E5%9D%80-md/"/>
    <id>https://sbsb.life/2023/03/09/%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%E8%8E%B7%E5%8F%96%E6%A0%91%E8%8E%93%E6%B4%BEIP%E5%9C%B0%E5%9D%80-md/</id>
    <published>2023-03-09T14:51:22.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="打开“运行”窗口（快捷键：win-R）"><a href="#打开“运行”窗口（快捷键：win-R）" class="headerlink" title="打开“运行”窗口（快捷键：win+R）"></a>打开“运行”窗口（快捷键：win+R）</h3><p><img src="https://pic.imgdb.cn/item/63c795e6be43e0d30e1acfe7.png" alt="chuankou"></p><h3 id="在窗口中输入cmd，点击确认"><a href="#在窗口中输入cmd，点击确认" class="headerlink" title="在窗口中输入cmd，点击确认"></a>在窗口中输入cmd，点击确认</h3><p><img src="https://pic.imgdb.cn/item/63c795e8be43e0d30e1ad2a3.png" alt="cmd"></p><h3 id="在cmd命令窗口输入“ipconfig”命令，回车"><a href="#在cmd命令窗口输入“ipconfig”命令，回车" class="headerlink" title="在cmd命令窗口输入“ipconfig”命令，回车"></a>在cmd命令窗口输入“ipconfig”命令，回车</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping -4 raspberrypi.local</span><br></pre></td></tr></table></figure><p>这样就可以获得IP地址</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;打开“运行”窗口（快捷键：win-R）&quot;&gt;&lt;a href=&quot;#打开“运行”窗口（快捷键：win-R）&quot; class=&quot;headerlink&quot; title=&quot;打开“运行”窗口（快捷键：win+R）&quot;&gt;&lt;/a&gt;打开“运行”窗口（快捷键：win+R）&lt;/h3&gt;&lt;p&gt;&lt;i</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="IP" scheme="https://sbsb.life/tags/IP/"/>
    
    <category term="树莓派" scheme="https://sbsb.life/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>Windows系统查看局域网内所有已使用的IP</title>
    <link href="https://sbsb.life/2023/01/18/windows%E6%9F%A5%E7%9C%8B%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E6%89%80%E6%9C%89%E5%B7%B2%E4%BD%BF%E7%94%A8%E7%9A%84IP/"/>
    <id>https://sbsb.life/2023/01/18/windows%E6%9F%A5%E7%9C%8B%E5%B1%80%E5%9F%9F%E7%BD%91%E5%86%85%E6%89%80%E6%9C%89%E5%B7%B2%E4%BD%BF%E7%94%A8%E7%9A%84IP/</id>
    <published>2023-01-18T06:40:40.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>在使用树莓派的情况下没有显示屏，蹭隔壁老王家的WiFi，没有办法从后台获取树莓派的IP地址，又想远程登入，就想到用文章中的方法获取局域网下所有在线设备的IP地址，然后一个一个连接尝试登入，我真是一个大聪明</p><hr><h3 id="一、打开“运行”窗口（快捷键：win-R）"><a href="#一、打开“运行”窗口（快捷键：win-R）" class="headerlink" title="一、打开“运行”窗口（快捷键：win+R）"></a>一、打开“运行”窗口（快捷键：win+R）</h3><p><img src="https://pic.imgdb.cn/item/63c795e6be43e0d30e1acfe7.png" alt="chuankou"></p><h3 id="二、在窗口中输入cmd，点击确认"><a href="#二、在窗口中输入cmd，点击确认" class="headerlink" title="二、在窗口中输入cmd，点击确认"></a>二、在窗口中输入cmd，点击确认</h3><p><img src="https://pic.imgdb.cn/item/63c795e8be43e0d30e1ad2a3.png" alt="cmd"></p><h3 id="三、在cmd命令窗口输入“ipconfig”命令，回车"><a href="#三、在cmd命令窗口输入“ipconfig”命令，回车" class="headerlink" title="三、在cmd命令窗口输入“ipconfig”命令，回车"></a>三、在cmd命令窗口输入“ipconfig”命令，回车</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/63c7949dbe43e0d30e187db9.png" alt="ip"></p><p> 此时就可以找到自己的ip地址，可以看到本机ip是192.168.1.2</p><p><img src="https://pic.imgdb.cn/item/63c794a0be43e0d30e188229.png"></p><h3 id="在cmd命令窗口输入以下命令，回车（注意：这里的192-168-1-是根据自己电脑的ip网段来填写的）"><a href="#在cmd命令窗口输入以下命令，回车（注意：这里的192-168-1-是根据自己电脑的ip网段来填写的）" class="headerlink" title="在cmd命令窗口输入以下命令，回车（注意：这里的192.168.1.*是根据自己电脑的ip网段来填写的）"></a>在cmd命令窗口输入以下命令，回车（注意：这里的192.168.1.*是根据自己电脑的ip网段来填写的）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /L %i IN (1,1,254) DO ping -w 2 -n 1 192.168.1.%i</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/63c79db0be43e0d30e2c0bb0.jpg"></p><p>等待几分钟命令处理完成</p><p><img src="https://pic.imgdb.cn/item/63c794a6be43e0d30e188d3a.png"></p><h3 id="在cmd命令窗口输入“arp-a”，回车"><a href="#在cmd命令窗口输入“arp-a”，回车" class="headerlink" title="在cmd命令窗口输入“arp -a”，回车"></a>在cmd命令窗口输入“arp -a”，回车</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp -a</span><br></pre></td></tr></table></figure><p><img src="https://pic.imgdb.cn/item/63c794a9be43e0d30e18b6bd.png"></p><p>这时候就可以看见局域网内正在使用的电脑的IP地址了</p><p><img src="https://pic.imgdb.cn/item/63c794acbe43e0d30e18bd73.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h3&gt;&lt;p&gt;在使用树莓派的情况下没有显示屏，蹭隔壁老王家的WiFi，没有办法从后台获取树莓派的IP地址，又想远程登入，就想到用文章中的方法获取局域网下所</summary>
      
    
    
    
    <category term="编程学习" scheme="https://sbsb.life/categories/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="IP" scheme="https://sbsb.life/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>流量卡介绍</title>
    <link href="https://sbsb.life/2022/11/26/%E6%A0%A1%E5%9B%AD%E5%8D%A1%E6%9C%8D%E5%8A%A1/"/>
    <id>https://sbsb.life/2022/11/26/%E6%A0%A1%E5%9B%AD%E5%8D%A1%E6%9C%8D%E5%8A%A1/</id>
    <published>2022-11-26T12:01:11.000Z</published>
    <updated>2025-04-08T03:57:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><h4 id="绝不套路任何一位客户"><a href="#绝不套路任何一位客户" class="headerlink" title="绝不套路任何一位客户"></a>绝不套路任何一位客户</h4><h4 id="只卖官方正规套餐，客服，掌厅可查"><a href="#只卖官方正规套餐，客服，掌厅可查" class="headerlink" title="只卖官方正规套餐，客服，掌厅可查"></a>只卖官方正规套餐，客服，掌厅可查</h4><h4 id="不做任何套路宣传，实事求是"><a href="#不做任何套路宣传，实事求是" class="headerlink" title="不做任何套路宣传，实事求是"></a>不做任何套路宣传，实事求是</h4><hr><h3 id="三不卖"><a href="#三不卖" class="headerlink" title="三不卖"></a>三不卖</h3><h4 id="不卖黑卡（已经实名的卡），"><a href="#不卖黑卡（已经实名的卡），" class="headerlink" title="不卖黑卡（已经实名的卡），"></a>不卖黑卡（已经实名的卡），</h4><h4 id="不卖物联卡（不是三大运营商的）"><a href="#不卖物联卡（不是三大运营商的）" class="headerlink" title="不卖物联卡（不是三大运营商的）"></a>不卖物联卡（不是三大运营商的）</h4><h4 id="不卖违规加包的卡（不是说卡不好，不喜欢处理售后，所以不喜欢卖）"><a href="#不卖违规加包的卡（不是说卡不好，不喜欢处理售后，所以不喜欢卖）" class="headerlink" title="不卖违规加包的卡（不是说卡不好，不喜欢处理售后，所以不喜欢卖）"></a>不卖违规加包的卡（不是说卡不好，不喜欢处理售后，所以不喜欢卖）</h4><p><strong>感谢所有支持我的小伙伴 请往下看完！</strong></p><hr><ul><li>所有卡全是正规校园卡，正规的三大运营商官方手机卡，官方可查只要你要求符合，全国能办（个别卡除外），全国能用。</li><li>别问靠谱吗？稳定吗？连中国移动，中国联通，中国电信的卡你都觉得不靠谱，放弃用手机卡吧。。。。</li><li>办卡只办适合自己的，一味的追求永久套餐啊啥的没意义，营业厅里面的都是永久的，你会一直用下去么？而且月租高流量少。</li><li>好卡都是 内蒙，湖南，河北，浙江这些地区，你们本地没有出优惠卡，就算出了有些卡也不会全国卖，所以我这边也就没有你所在地区的卡。</li></ul><hr><h3 id="这里推荐一个用卡组合方案"><a href="#这里推荐一个用卡组合方案" class="headerlink" title="这里推荐一个用卡组合方案"></a>这里推荐一个用卡组合方案</h3><p>老号码去改成最低月租套餐，比如移动是8元飞享套餐（联系10086客服就能改）老号码可用来接打电话，现在打电话也便宜，最高也就0.15元&#x2F;分钟，然后办个流量多的外地卡，只用来上网，现在手机一般都双卡双待，2张卡无压力。</p><h3 id="九“不”要注意"><a href="#九“不”要注意" class="headerlink" title="九“不”要注意"></a>九“不”要注意</h3><hr><ul><li>不卖物联卡：不是三大运营商的卡，通常没有语音功能，只卖正规运营商的卡，不卖物联卡，不卖物联卡！！</li><li>不卖BUG卡：通过漏洞加的流量包或者违规加的流量卡</li><li>不能办副卡：校园卡一般不能办理副卡</li><li>不能老号改套餐：校园卡的特殊性，只能新办，不能老号改</li><li>不能携号转网到校园套餐：老号都不能改，携号转网肯定不行</li><li>不能选归属地：校园卡都是地方性的卡，归属地都是固定</li><li>不能选号：一般都是随机发，个别卡能选的会在套餐页面说明</li><li>不能过户：校园卡一般都是2年或者4年，有合约期，有优惠减免</li><li>不能续约 ：校园卡2年或者4年优惠期，到期后去销户</li></ul><hr><h3 id="办卡收费问题："><a href="#办卡收费问题：" class="headerlink" title="办卡收费问题："></a>办卡收费问题：</h3><p><strong>在我们这里办卡是不收费的，并且是包邮到家，个别卡是免费上门激活的，不认识字也没有关系可以放心购买</strong></p><h4 id="流量问题"><a href="#流量问题" class="headerlink" title="流量问题"></a>流量问题</h4><p>套餐都有写着月租多少流量多少，这个流量是每个月都有，有些小白不知道咋想的，就比如20G的套餐，怎么可能是一年20G，肯定是每个月啊，20G一年够用么？</p><hr><h4 id="销户问题"><a href="#销户问题" class="headerlink" title="销户问题"></a>销户问题</h4><p>校园卡一般有优惠期，部分卡优惠期内不能随时销户，如果你确实想要提前销户，可以自己联系运营商客服咨询是否可以提前销户，有可能提前销户要交违约金，所有正规卡都支持异地销户，具体的咨询官方客服。</p><h4 id="网速快慢"><a href="#网速快慢" class="headerlink" title="网速快慢"></a>网速快慢</h4><p>有些人网速慢或者信号差，就说卡问题，这个取决于你所在地附近的基站信号，跟卡没关系！跟套餐没关系。全国各地用同一种卡，网速都会不一样，各种因素，信号的遮挡，基站用的人多，都会造成网速慢</p><p>没有人会给你保证说网速肯定好肯定快之类的，不现实，除非这人住你隔壁。</p><hr><h4 id="身份证件问题"><a href="#身份证件问题" class="headerlink" title="身份证件问题"></a>身份证件问题</h4><p>个别卡是官方自助上传证件资料，还有部分卡是需要发身份证件给小编，这个没有办法，你不发，卡就办不了，系统没有你的证件资料入网，就算卡发你了，也是张空卡，你也激活不了。</p><hr><h4 id="实名激活规范的严重性"><a href="#实名激活规范的严重性" class="headerlink" title="实名激活规范的严重性"></a>实名激活规范的严重性</h4><p>凡是需要传三张照片，身份证正反面+半身照的，必须拍规范，自己不确定的发我审核，如果是给你连接自己传的，发我的时候可以打码。<br>收到卡实名激活的时候，必须按照要求拍规范，视频拍规范</p><hr><h5 id="不规范的后果"><a href="#不规范的后果" class="headerlink" title="不规范的后果"></a>不规范的后果</h5><ul><li>导致实名激活失败，卡用不了</li><li>部分卡不能重新激活的，只能重新下单<br>这也是为什么，拍照要求这么严格的原因，拍规范了一次性通过，你能直接用上卡，我这边也省事。</li></ul><hr><h4 id="证件安全问题"><a href="#证件安全问题" class="headerlink" title="证件安全问题"></a>证件安全问题</h4><p>卡都是直接跟营业厅合作，可以保证证件安全，你信任就办，不信任我也没办法，你可以办其他自助官方下单的卡。</p><hr><h3 id="关于售后问题"><a href="#关于售后问题" class="headerlink" title="关于售后问题"></a>关于售后问题</h3><h4 id="办理的卡售后范围"><a href="#办理的卡售后范围" class="headerlink" title="办理的卡售后范围"></a>办理的卡售后范围</h4><p>套餐与宣传的不一致</p><p>免费卡有没有售后？</p><p>免费办理的卡，我能解决的尽量给你解决，无法解决的只能你自己联系官方运营商客服。</p><hr><h4 id="不在售后范围之内包含"><a href="#不在售后范围之内包含" class="headerlink" title="不在售后范围之内包含"></a>不在售后范围之内包含</h4><ul><li>你所在的地区基站问题导致网速慢</li><li>在诈骗地区使用导致被公安局停，自己联系官方客服解决</li><li>卡板人为损坏，导致用不了，自己去营业厅补卡</li></ul><h3 id="其余问题全部联系运营商官方售后客服解决！"><a href="#其余问题全部联系运营商官方售后客服解决！" class="headerlink" title="其余问题全部联系运营商官方售后客服解决！"></a>其余问题全部联系运营商官方售后客服解决！</h3><p>中国电信官方客服电话：10000<br>中国联通官方客服电话：10010<br>中国移动官方客服电话：10086</p><h4 id="对套餐月租扣费有疑问的，先问运营商官方客服，如果客服核实到套餐不一致，再来我这边反馈！"><a href="#对套餐月租扣费有疑问的，先问运营商官方客服，如果客服核实到套餐不一致，再来我这边反馈！" class="headerlink" title="对套餐月租扣费有疑问的，先问运营商官方客服，如果客服核实到套餐不一致，再来我这边反馈！"></a>对套餐月租扣费有疑问的，先问运营商官方客服，如果客服核实到套餐不一致，再来我这边反馈！</h4><h3 id="扫下方二维码加微信小编"><a href="#扫下方二维码加微信小编" class="headerlink" title="扫下方二维码加微信小编"></a>扫下方二维码加微信小编</h3><hr><p><strong>微信通过后，直奔主题，发你要办理的套餐截图，再发你要咨询的问题</strong></p><p>V号：muzran</p><p><img src="https://pic.imgdb.cn/item/6381de9f16f2c2beb1b20ddc.jpg" alt="wx二维码"></p><p><strong>办卡，直接发要办理的套餐截图，然后发你要咨询的问题</strong><br>为广大网友提供校园卡优惠套餐办理，不存在跑路一说，信任就办，不要加了小编后，来一句不会是骗人的吧，跑路啥的，本公众号依法办卡，诚信至上！</p><h3 id="申请卡的地址"><a href="#申请卡的地址" class="headerlink" title="申请卡的地址"></a>申请卡的地址</h3><h3 id="链接直达"><a href="#链接直达" class="headerlink" title="链接直达"></a><a href="http://hh.youzihaoka.cn/">链接直达</a></h3><h4 id="申请卡的二维码"><a href="#申请卡的二维码" class="headerlink" title="申请卡的二维码"></a>申请卡的二维码</h4><p><img src="https://imagebed.sbsb.life/82d826a44365cb6005bbf41e18f7382.png" alt="82d826a44365cb6005bbf41e18f7382"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;声明&quot;&gt;&lt;a href=&quot;#声明&quot; class=&quot;headerlink&quot; title=&quot;声明&quot;&gt;&lt;/a&gt;声明&lt;/h3&gt;&lt;h4 id=&quot;绝不套路任何一位客户&quot;&gt;&lt;a href=&quot;#绝不套路任何一位客户&quot; class=&quot;headerlink&quot; title=&quot;绝不套路任</summary>
      
    
    
    
    <category term="其他" scheme="https://sbsb.life/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="流量卡" scheme="https://sbsb.life/tags/%E6%B5%81%E9%87%8F%E5%8D%A1/"/>
    
  </entry>
  
</feed>
